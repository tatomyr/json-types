openapi: 3.0.0
info:
  description: |
    This is a sample server Petstore server.
    You can find out more about Swagger at
    [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).
    For this sample, you can use the api key `special-key` to test the authorization filters.

    # Introduction
    This API is documented in **OpenAPI format** and is based on
    [Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.
    It was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)
    tool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard
    OpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).

    # OpenAPI Specification
    This API is documented in **OpenAPI format** and is based on
    [Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.
    It was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)
    tool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard
    OpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).

    # Cross-Origin Resource Sharing
    This API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).
    And that allows cross-domain communication from the browser.
    All responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.

    # Authentication

    Petstore offers two forms of authentication:
      - API Key
      - OAuth2
    OAuth2 - an open protocol to allow secure authorization in a simple
    and standard method from web, mobile and desktop applications.

    <SecurityDefinitions />
  version: 1.0.0
  title: Swagger Petstore
  termsOfService: http://swagger.io/terms/
  contact:
    name: API Support
    email: apiteam@swagger.io
    url: https://github.com/Redocly/redoc
  x-logo:
    url: https://redocly.github.io/redoc/petstore-logo.png
    altText: Petstore logo
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: //petstore.swagger.io/v2
    description: Default server
  - url: //petstore.swagger.io/sandbox
    description: Sandbox server
tags:
  - name: pet
    description: Everything about your Pets
  - name: store
    description: Access to Petstore orders
  - name: user
    description: Operations about user
  - name: pet_model
    x-displayName: The Pet Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/Pet" />
  - name: store_model
    x-displayName: The Order Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/Order" exampleRef="#/components/examples/Order" showReadOnly={true} showWriteOnly={true} />
externalDocs:
  description: Find out how to create Github repo for your OpenAPI spec.
  url: https://github.com/Rebilly/generator-openapi-repo
paths:
  /petGet:
    parameters:
      - name: Accept-Language
        in: header
        description: The language you prefer for messages. Supported values are en-AU, en-CA, en-GB, en-US
        example: en-US
        required: false
        x-type: string
        schema:
          type: string
      - name: cookieParam
        in: cookie
        description: Some cookie
        required: true
        x-type: number::integer
        schema:
          type: integer
    post:
      tags:
        - pet
      summary: Add a new pet to the store
      description: Add new pet to the store inventory.
      operationId: addPet
      responses:
        '405':
          description: Invalid input
      security:
        - petstore_auth:
            - write:pets
            - read:pets
      x-codeSamples:
        - lang: C#
          source: |
            PetStore.v1.Pet pet = new PetStore.v1.Pet();
            pet.setApiKey("your api key");
            pet.petType = PetStore.v1.Pet.TYPE_DOG;
            pet.name = "Rex";
            // set other fields
            PetStoreResponse response = pet.create();
            if (response.statusCode == HttpStatusCode.Created)
            {
              // Successfully created
            }
            else
            {
              // Something wrong -- check response for errors
              Console.WriteLine(response.getRawResponse());
            }
        - lang: PHP
          source: |
            $form = new \PetStore\Entities\Pet();
            $form->setPetType("Dog");
            $form->setName("Rex");
            // set other fields
            try {
                $pet = $client->pets()->create($form);
            } catch (UnprocessableEntityException $e) {
                var_dump($e->getErrors());
            }
      requestBody:
        $ref: '#/components/requestBodies/Pet'
    put:
      tags:
        - pet
      summary: Update an existing pet
      description: ''
      operationId: updatePet
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '405':
          description: Validation exception
      security:
        - petstore_auth:
            - write:pets
            - read:pets
      x-codeSamples:
        - lang: PHP
          source: |
            $form = new \PetStore\Entities\Pet();
            $form->setPetId(1);
            $form->setPetType("Dog");
            $form->setName("Rex");
            // set other fields
            try {
                $pet = $client->pets()->update($form);
            } catch (UnprocessableEntityException $e) {
                var_dump($e->getErrors());
            }
      requestBody:
        $ref: '#/components/requestBodies/Pet'
  /GETpet/{petId}:
    get:
      tags:
        - pet
      summary: Find pet by ID
      description: Returns a single pet
      operationId: getPetById
      parameters:
        - name: petId
          in: path
          description: ID of pet to return
          required: true
          deprecated: true
          x-type: number::integer
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              x-type:
                id:
                  $and:
                    - $ref: '#/components/x-types/Id'
                category:
                  $and:
                    - $ref: '#/components/x-types/Category'
                name: string
                photoUrls:
                  array: string::url
                friend:
                  $and:
                    - $ref: '#/components/x-types/Pet'
                tags:
                  array:
                    id:
                      $and:
                        - $ref: '#/components/x-types/Id'
                    name: string::min(1)
                    $descriptions:
                      id: Tag ID
                      name: Tag name
                status:
                  - available
                  - pending
                  - sold
                petType: string
                $discriminator:
                  propertyName: petType
                  mapping:
                    cat: '#/components/schemas/Cat'
                    dog: '#/components/schemas/Dog'
                    bee: '#/components/schemas/HoneyBee'
                $descriptions:
                  id: Pet ID
                  category: Categories this pet belongs to
                  name: The name given to a pet
                  photoUrls: The list of URL to a cute photos featuring pet
                  tags: Tags attached to the pet
                  status: Pet status in the store
                  petType: Type of a pet
              schema:
                type: object
                properties:
                  id:
                    description: Pet ID
                    type: integer
                  category:
                    description: Categories this pet belongs to
                    type: object
                    properties:
                      id:
                        description: Category ID
                        type: integer
                      name:
                        description: Category name
                        type: string
                        minLength: 1
                      sub:
                        description: Test Sub Category
                        type: object
                        properties:
                          prop1:
                            description: Dumb Property
                            type: string
                        required:
                          - prop1
                        additionalProperties: false
                    required:
                      - id
                      - name
                      - sub
                    additionalProperties: false
                  name:
                    description: The name given to a pet
                    type: string
                  photoUrls:
                    description: The list of URL to a cute photos featuring pet
                    type: array
                    items:
                      type: string
                      format: url
                  friend:
                    type: object
                    properties:
                      id:
                        description: Pet ID
                        type: integer
                      category:
                        description: Categories this pet belongs to
                        type: object
                        properties:
                          id:
                            description: Category ID
                            type: integer
                          name:
                            description: Category name
                            type: string
                            minLength: 1
                          sub:
                            description: Test Sub Category
                            type: object
                            properties:
                              prop1:
                                description: Dumb Property
                                type: string
                            required:
                              - prop1
                            additionalProperties: false
                        required:
                          - id
                          - name
                          - sub
                        additionalProperties: false
                      name:
                        description: The name given to a pet
                        type: string
                      photoUrls:
                        description: The list of URL to a cute photos featuring pet
                        type: array
                        items:
                          type: string
                          format: url
                      friend:
                        type: object
                        properties:
                          id:
                            description: Pet ID
                            type: integer
                          category:
                            description: Categories this pet belongs to
                            type: object
                            properties:
                              id:
                                description: Category ID
                                type: integer
                              name:
                                description: Category name
                                type: string
                                minLength: 1
                              sub:
                                description: Test Sub Category
                                type: object
                                properties:
                                  prop1:
                                    description: Dumb Property
                                    type: string
                                required:
                                  - prop1
                                additionalProperties: false
                            required:
                              - id
                              - name
                              - sub
                            additionalProperties: false
                          name:
                            description: The name given to a pet
                            type: string
                          photoUrls:
                            description: The list of URL to a cute photos featuring pet
                            type: array
                            items:
                              type: string
                              format: url
                          friend: {}
                          tags:
                            description: Tags attached to the pet
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  description: Tag ID
                                  type: integer
                                name:
                                  description: Tag name
                                  type: string
                                  minLength: 1
                              required:
                                - id
                                - name
                              additionalProperties: false
                          status:
                            description: Pet status in the store
                            type: string
                            enum:
                              - available
                              - pending
                              - sold
                          petType:
                            description: Type of a pet
                            type: string
                        required:
                          - id
                          - category
                          - name
                          - photoUrls
                          - friend
                          - tags
                          - status
                          - petType
                        additionalProperties: false
                        discriminator:
                          propertyName: petType
                          mapping:
                            cat: '#/components/schemas/Cat'
                            dog: '#/components/schemas/Dog'
                            bee: '#/components/schemas/HoneyBee'
                      tags:
                        description: Tags attached to the pet
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              description: Tag ID
                              type: integer
                            name:
                              description: Tag name
                              type: string
                              minLength: 1
                          required:
                            - id
                            - name
                          additionalProperties: false
                      status:
                        description: Pet status in the store
                        type: string
                        enum:
                          - available
                          - pending
                          - sold
                      petType:
                        description: Type of a pet
                        type: string
                    required:
                      - id
                      - category
                      - name
                      - photoUrls
                      - friend
                      - tags
                      - status
                      - petType
                    additionalProperties: false
                    discriminator:
                      propertyName: petType
                      mapping:
                        cat: '#/components/schemas/Cat'
                        dog: '#/components/schemas/Dog'
                        bee: '#/components/schemas/HoneyBee'
                  tags:
                    description: Tags attached to the pet
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          description: Tag ID
                          type: integer
                        name:
                          description: Tag name
                          type: string
                          minLength: 1
                      required:
                        - id
                        - name
                      additionalProperties: false
                  status:
                    description: Pet status in the store
                    type: string
                    enum:
                      - available
                      - pending
                      - sold
                  petType:
                    description: Type of a pet
                    type: string
                required:
                  - id
                  - category
                  - name
                  - photoUrls
                  - friend
                  - tags
                  - status
                  - petType
                additionalProperties: false
                discriminator:
                  propertyName: petType
                  mapping:
                    cat: '#/components/schemas/Cat'
                    dog: '#/components/schemas/Dog'
                    bee: '#/components/schemas/HoneyBee'
            application/xml:
              x-type:
                id:
                  $and:
                    - $ref: '#/components/x-types/Id'
                category:
                  $and:
                    - $ref: '#/components/x-types/Category'
                name: string
                photoUrls:
                  array: string::url
                friend:
                  $and:
                    - $ref: '#/components/x-types/Pet'
                tags:
                  array:
                    id:
                      $and:
                        - $ref: '#/components/x-types/Id'
                    name: string::min(1)
                    $descriptions:
                      id: Tag ID
                      name: Tag name
                status:
                  - available
                  - pending
                  - sold
                petType: string
                $discriminator:
                  propertyName: petType
                  mapping:
                    cat: '#/components/schemas/Cat'
                    dog: '#/components/schemas/Dog'
                    bee: '#/components/schemas/HoneyBee'
                $descriptions:
                  id: Pet ID
                  category: Categories this pet belongs to
                  name: The name given to a pet
                  photoUrls: The list of URL to a cute photos featuring pet
                  tags: Tags attached to the pet
                  status: Pet status in the store
                  petType: Type of a pet
              schema:
                type: object
                properties:
                  id:
                    description: Pet ID
                    type: integer
                  category:
                    description: Categories this pet belongs to
                    type: object
                    properties:
                      id:
                        description: Category ID
                        type: integer
                      name:
                        description: Category name
                        type: string
                        minLength: 1
                      sub:
                        description: Test Sub Category
                        type: object
                        properties:
                          prop1:
                            description: Dumb Property
                            type: string
                        required:
                          - prop1
                        additionalProperties: false
                    required:
                      - id
                      - name
                      - sub
                    additionalProperties: false
                  name:
                    description: The name given to a pet
                    type: string
                  photoUrls:
                    description: The list of URL to a cute photos featuring pet
                    type: array
                    items:
                      type: string
                      format: url
                  friend:
                    type: object
                    properties:
                      id:
                        description: Pet ID
                        type: integer
                      category:
                        description: Categories this pet belongs to
                        type: object
                        properties:
                          id:
                            description: Category ID
                            type: integer
                          name:
                            description: Category name
                            type: string
                            minLength: 1
                          sub:
                            description: Test Sub Category
                            type: object
                            properties:
                              prop1:
                                description: Dumb Property
                                type: string
                            required:
                              - prop1
                            additionalProperties: false
                        required:
                          - id
                          - name
                          - sub
                        additionalProperties: false
                      name:
                        description: The name given to a pet
                        type: string
                      photoUrls:
                        description: The list of URL to a cute photos featuring pet
                        type: array
                        items:
                          type: string
                          format: url
                      friend:
                        type: object
                        properties:
                          id:
                            description: Pet ID
                            type: integer
                          category:
                            description: Categories this pet belongs to
                            type: object
                            properties:
                              id:
                                description: Category ID
                                type: integer
                              name:
                                description: Category name
                                type: string
                                minLength: 1
                              sub:
                                description: Test Sub Category
                                type: object
                                properties:
                                  prop1:
                                    description: Dumb Property
                                    type: string
                                required:
                                  - prop1
                                additionalProperties: false
                            required:
                              - id
                              - name
                              - sub
                            additionalProperties: false
                          name:
                            description: The name given to a pet
                            type: string
                          photoUrls:
                            description: The list of URL to a cute photos featuring pet
                            type: array
                            items:
                              type: string
                              format: url
                          friend: {}
                          tags:
                            description: Tags attached to the pet
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  description: Tag ID
                                  type: integer
                                name:
                                  description: Tag name
                                  type: string
                                  minLength: 1
                              required:
                                - id
                                - name
                              additionalProperties: false
                          status:
                            description: Pet status in the store
                            type: string
                            enum:
                              - available
                              - pending
                              - sold
                          petType:
                            description: Type of a pet
                            type: string
                        required:
                          - id
                          - category
                          - name
                          - photoUrls
                          - friend
                          - tags
                          - status
                          - petType
                        additionalProperties: false
                        discriminator:
                          propertyName: petType
                          mapping:
                            cat: '#/components/schemas/Cat'
                            dog: '#/components/schemas/Dog'
                            bee: '#/components/schemas/HoneyBee'
                      tags:
                        description: Tags attached to the pet
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              description: Tag ID
                              type: integer
                            name:
                              description: Tag name
                              type: string
                              minLength: 1
                          required:
                            - id
                            - name
                          additionalProperties: false
                      status:
                        description: Pet status in the store
                        type: string
                        enum:
                          - available
                          - pending
                          - sold
                      petType:
                        description: Type of a pet
                        type: string
                    required:
                      - id
                      - category
                      - name
                      - photoUrls
                      - friend
                      - tags
                      - status
                      - petType
                    additionalProperties: false
                    discriminator:
                      propertyName: petType
                      mapping:
                        cat: '#/components/schemas/Cat'
                        dog: '#/components/schemas/Dog'
                        bee: '#/components/schemas/HoneyBee'
                  tags:
                    description: Tags attached to the pet
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          description: Tag ID
                          type: integer
                        name:
                          description: Tag name
                          type: string
                          minLength: 1
                      required:
                        - id
                        - name
                      additionalProperties: false
                  status:
                    description: Pet status in the store
                    type: string
                    enum:
                      - available
                      - pending
                      - sold
                  petType:
                    description: Type of a pet
                    type: string
                required:
                  - id
                  - category
                  - name
                  - photoUrls
                  - friend
                  - tags
                  - status
                  - petType
                additionalProperties: false
                discriminator:
                  propertyName: petType
                  mapping:
                    cat: '#/components/schemas/Cat'
                    dog: '#/components/schemas/Dog'
                    bee: '#/components/schemas/HoneyBee'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
      security:
        - api_key: []
    post:
      tags:
        - pet
      summary: Updates a pet in the store with form data
      description: ''
      operationId: updatePetWithForm
      parameters:
        - name: petId
          in: path
          description: ID of pet that needs to be updated
          required: true
          x-type: number::integer
          schema:
            type: integer
      responses:
        '405':
          description: Invalid input
      security:
        - petstore_auth:
            - write:pets
            - read:pets
      requestBody:
        content:
          application/x-www-form-urlencoded:
            x-type:
              name: string
              status: string
              $descriptions:
                name: Updated name of the pet
                status: Updated status of the pet
            schema:
              type: object
              properties:
                name:
                  description: Updated name of the pet
                  type: string
                status:
                  description: Updated status of the pet
                  type: string
              required:
                - name
                - status
              additionalProperties: false
    delete:
      tags:
        - pet
      summary: Deletes a pet
      description: ''
      operationId: deletePet
      parameters:
        - name: api_key
          in: header
          required: false
          example: Bearer <TOKEN>
          x-type: string
          schema:
            type: string
        - name: petId
          in: path
          description: Pet id to delete
          required: true
          x-type: number::integer
          schema:
            type: integer
      responses:
        '400':
          description: Invalid pet value
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /pet/{petId}/uploadImage:
    post:
      tags:
        - pet
      summary: uploads an image
      description: ''
      operationId: uploadFile
      parameters:
        - name: petId
          in: path
          description: ID of pet to update
          required: true
          x-type: number::integer
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              x-type:
                code: number::integer
                type: string
                message: string
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  type:
                    type: string
                  message:
                    type: string
                required:
                  - code
                  - type
                  - message
                additionalProperties: false
      security:
        - petstore_auth:
            - write:pets
            - read:pets
      requestBody:
        content:
          application/octet-stream:
            x-type: string::binary
            schema:
              type: string
              format: binary
  /pet/findByStatusPut:
    get:
      tags:
        - pet
      summary: Finds Pets by status
      description: Multiple status values can be provided with comma separated strings
      operationId: findPetsByStatus
      parameters:
        - name: status
          in: query
          description: Status values that need to be considered for filter
          required: true
          style: form
          x-type:
            array:
              - available
              - pending
              - sold
          schema:
            type: array
            items:
              type: string
              enum:
                - available
                - pending
                - sold
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              x-type:
                array:
                  id:
                    $and:
                      - $ref: '#/components/x-types/Id'
                  category:
                    $and:
                      - $ref: '#/components/x-types/Category'
                  name: string
                  photoUrls:
                    array: string::url
                  friend:
                    $and:
                      - $ref: '#/components/x-types/Pet'
                  tags:
                    array:
                      id:
                        $and:
                          - $ref: '#/components/x-types/Id'
                      name: string::min(1)
                      $descriptions:
                        id: Tag ID
                        name: Tag name
                  status:
                    - available
                    - pending
                    - sold
                  petType: string
                  $discriminator:
                    propertyName: petType
                    mapping:
                      cat: '#/components/schemas/Cat'
                      dog: '#/components/schemas/Dog'
                      bee: '#/components/schemas/HoneyBee'
                  $descriptions:
                    id: Pet ID
                    category: Categories this pet belongs to
                    name: The name given to a pet
                    photoUrls: The list of URL to a cute photos featuring pet
                    tags: Tags attached to the pet
                    status: Pet status in the store
                    petType: Type of a pet
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      description: Pet ID
                      type: integer
                    category:
                      description: Categories this pet belongs to
                      type: object
                      properties:
                        id:
                          description: Category ID
                          type: integer
                        name:
                          description: Category name
                          type: string
                          minLength: 1
                        sub:
                          description: Test Sub Category
                          type: object
                          properties:
                            prop1:
                              description: Dumb Property
                              type: string
                          required:
                            - prop1
                          additionalProperties: false
                      required:
                        - id
                        - name
                        - sub
                      additionalProperties: false
                    name:
                      description: The name given to a pet
                      type: string
                    photoUrls:
                      description: The list of URL to a cute photos featuring pet
                      type: array
                      items:
                        type: string
                        format: url
                    friend:
                      type: object
                      properties:
                        id:
                          description: Pet ID
                          type: integer
                        category:
                          description: Categories this pet belongs to
                          type: object
                          properties:
                            id:
                              description: Category ID
                              type: integer
                            name:
                              description: Category name
                              type: string
                              minLength: 1
                            sub:
                              description: Test Sub Category
                              type: object
                              properties:
                                prop1:
                                  description: Dumb Property
                                  type: string
                              required:
                                - prop1
                              additionalProperties: false
                          required:
                            - id
                            - name
                            - sub
                          additionalProperties: false
                        name:
                          description: The name given to a pet
                          type: string
                        photoUrls:
                          description: The list of URL to a cute photos featuring pet
                          type: array
                          items:
                            type: string
                            format: url
                        friend:
                          type: object
                          properties:
                            id:
                              description: Pet ID
                              type: integer
                            category:
                              description: Categories this pet belongs to
                              type: object
                              properties:
                                id:
                                  description: Category ID
                                  type: integer
                                name:
                                  description: Category name
                                  type: string
                                  minLength: 1
                                sub:
                                  description: Test Sub Category
                                  type: object
                                  properties:
                                    prop1:
                                      description: Dumb Property
                                      type: string
                                  required:
                                    - prop1
                                  additionalProperties: false
                              required:
                                - id
                                - name
                                - sub
                              additionalProperties: false
                            name:
                              description: The name given to a pet
                              type: string
                            photoUrls:
                              description: The list of URL to a cute photos featuring pet
                              type: array
                              items:
                                type: string
                                format: url
                            friend: {}
                            tags:
                              description: Tags attached to the pet
                              type: array
                              items:
                                type: object
                                properties:
                                  id:
                                    description: Tag ID
                                    type: integer
                                  name:
                                    description: Tag name
                                    type: string
                                    minLength: 1
                                required:
                                  - id
                                  - name
                                additionalProperties: false
                            status:
                              description: Pet status in the store
                              type: string
                              enum:
                                - available
                                - pending
                                - sold
                            petType:
                              description: Type of a pet
                              type: string
                          required:
                            - id
                            - category
                            - name
                            - photoUrls
                            - friend
                            - tags
                            - status
                            - petType
                          additionalProperties: false
                          discriminator:
                            propertyName: petType
                            mapping:
                              cat: '#/components/schemas/Cat'
                              dog: '#/components/schemas/Dog'
                              bee: '#/components/schemas/HoneyBee'
                        tags:
                          description: Tags attached to the pet
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                description: Tag ID
                                type: integer
                              name:
                                description: Tag name
                                type: string
                                minLength: 1
                            required:
                              - id
                              - name
                            additionalProperties: false
                        status:
                          description: Pet status in the store
                          type: string
                          enum:
                            - available
                            - pending
                            - sold
                        petType:
                          description: Type of a pet
                          type: string
                      required:
                        - id
                        - category
                        - name
                        - photoUrls
                        - friend
                        - tags
                        - status
                        - petType
                      additionalProperties: false
                      discriminator:
                        propertyName: petType
                        mapping:
                          cat: '#/components/schemas/Cat'
                          dog: '#/components/schemas/Dog'
                          bee: '#/components/schemas/HoneyBee'
                    tags:
                      description: Tags attached to the pet
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            description: Tag ID
                            type: integer
                          name:
                            description: Tag name
                            type: string
                            minLength: 1
                        required:
                          - id
                          - name
                        additionalProperties: false
                    status:
                      description: Pet status in the store
                      type: string
                      enum:
                        - available
                        - pending
                        - sold
                    petType:
                      description: Type of a pet
                      type: string
                  required:
                    - id
                    - category
                    - name
                    - photoUrls
                    - friend
                    - tags
                    - status
                    - petType
                  additionalProperties: false
                  discriminator:
                    propertyName: petType
                    mapping:
                      cat: '#/components/schemas/Cat'
                      dog: '#/components/schemas/Dog'
                      bee: '#/components/schemas/HoneyBee'
            application/xml:
              x-type:
                array:
                  id:
                    $and:
                      - $ref: '#/components/x-types/Id'
                  category:
                    $and:
                      - $ref: '#/components/x-types/Category'
                  name: string
                  photoUrls:
                    array: string::url
                  friend:
                    $and:
                      - $ref: '#/components/x-types/Pet'
                  tags:
                    array:
                      id:
                        $and:
                          - $ref: '#/components/x-types/Id'
                      name: string::min(1)
                      $descriptions:
                        id: Tag ID
                        name: Tag name
                  status:
                    - available
                    - pending
                    - sold
                  petType: string
                  $discriminator:
                    propertyName: petType
                    mapping:
                      cat: '#/components/schemas/Cat'
                      dog: '#/components/schemas/Dog'
                      bee: '#/components/schemas/HoneyBee'
                  $descriptions:
                    id: Pet ID
                    category: Categories this pet belongs to
                    name: The name given to a pet
                    photoUrls: The list of URL to a cute photos featuring pet
                    tags: Tags attached to the pet
                    status: Pet status in the store
                    petType: Type of a pet
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      description: Pet ID
                      type: integer
                    category:
                      description: Categories this pet belongs to
                      type: object
                      properties:
                        id:
                          description: Category ID
                          type: integer
                        name:
                          description: Category name
                          type: string
                          minLength: 1
                        sub:
                          description: Test Sub Category
                          type: object
                          properties:
                            prop1:
                              description: Dumb Property
                              type: string
                          required:
                            - prop1
                          additionalProperties: false
                      required:
                        - id
                        - name
                        - sub
                      additionalProperties: false
                    name:
                      description: The name given to a pet
                      type: string
                    photoUrls:
                      description: The list of URL to a cute photos featuring pet
                      type: array
                      items:
                        type: string
                        format: url
                    friend:
                      type: object
                      properties:
                        id:
                          description: Pet ID
                          type: integer
                        category:
                          description: Categories this pet belongs to
                          type: object
                          properties:
                            id:
                              description: Category ID
                              type: integer
                            name:
                              description: Category name
                              type: string
                              minLength: 1
                            sub:
                              description: Test Sub Category
                              type: object
                              properties:
                                prop1:
                                  description: Dumb Property
                                  type: string
                              required:
                                - prop1
                              additionalProperties: false
                          required:
                            - id
                            - name
                            - sub
                          additionalProperties: false
                        name:
                          description: The name given to a pet
                          type: string
                        photoUrls:
                          description: The list of URL to a cute photos featuring pet
                          type: array
                          items:
                            type: string
                            format: url
                        friend:
                          type: object
                          properties:
                            id:
                              description: Pet ID
                              type: integer
                            category:
                              description: Categories this pet belongs to
                              type: object
                              properties:
                                id:
                                  description: Category ID
                                  type: integer
                                name:
                                  description: Category name
                                  type: string
                                  minLength: 1
                                sub:
                                  description: Test Sub Category
                                  type: object
                                  properties:
                                    prop1:
                                      description: Dumb Property
                                      type: string
                                  required:
                                    - prop1
                                  additionalProperties: false
                              required:
                                - id
                                - name
                                - sub
                              additionalProperties: false
                            name:
                              description: The name given to a pet
                              type: string
                            photoUrls:
                              description: The list of URL to a cute photos featuring pet
                              type: array
                              items:
                                type: string
                                format: url
                            friend: {}
                            tags:
                              description: Tags attached to the pet
                              type: array
                              items:
                                type: object
                                properties:
                                  id:
                                    description: Tag ID
                                    type: integer
                                  name:
                                    description: Tag name
                                    type: string
                                    minLength: 1
                                required:
                                  - id
                                  - name
                                additionalProperties: false
                            status:
                              description: Pet status in the store
                              type: string
                              enum:
                                - available
                                - pending
                                - sold
                            petType:
                              description: Type of a pet
                              type: string
                          required:
                            - id
                            - category
                            - name
                            - photoUrls
                            - friend
                            - tags
                            - status
                            - petType
                          additionalProperties: false
                          discriminator:
                            propertyName: petType
                            mapping:
                              cat: '#/components/schemas/Cat'
                              dog: '#/components/schemas/Dog'
                              bee: '#/components/schemas/HoneyBee'
                        tags:
                          description: Tags attached to the pet
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                description: Tag ID
                                type: integer
                              name:
                                description: Tag name
                                type: string
                                minLength: 1
                            required:
                              - id
                              - name
                            additionalProperties: false
                        status:
                          description: Pet status in the store
                          type: string
                          enum:
                            - available
                            - pending
                            - sold
                        petType:
                          description: Type of a pet
                          type: string
                      required:
                        - id
                        - category
                        - name
                        - photoUrls
                        - friend
                        - tags
                        - status
                        - petType
                      additionalProperties: false
                      discriminator:
                        propertyName: petType
                        mapping:
                          cat: '#/components/schemas/Cat'
                          dog: '#/components/schemas/Dog'
                          bee: '#/components/schemas/HoneyBee'
                    tags:
                      description: Tags attached to the pet
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            description: Tag ID
                            type: integer
                          name:
                            description: Tag name
                            type: string
                            minLength: 1
                        required:
                          - id
                          - name
                        additionalProperties: false
                    status:
                      description: Pet status in the store
                      type: string
                      enum:
                        - available
                        - pending
                        - sold
                    petType:
                      description: Type of a pet
                      type: string
                  required:
                    - id
                    - category
                    - name
                    - photoUrls
                    - friend
                    - tags
                    - status
                    - petType
                  additionalProperties: false
                  discriminator:
                    propertyName: petType
                    mapping:
                      cat: '#/components/schemas/Cat'
                      dog: '#/components/schemas/Dog'
                      bee: '#/components/schemas/HoneyBee'
        '400':
          description: Invalid status value
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /GETCustomers/findByTags:
    get:
      tags:
        - pet
      summary: Finds Pets by tags
      description: Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.
      operationId: findPetsByTags
      deprecated: true
      parameters:
        - name: tags
          in: query
          description: Tags to filter by
          required: true
          style: form
          x-type:
            array: string
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              x-type:
                array:
                  id:
                    $and:
                      - $ref: '#/components/x-types/Id'
                  category:
                    $and:
                      - $ref: '#/components/x-types/Category'
                  name: string
                  photoUrls:
                    array: string::url
                  friend:
                    $and:
                      - $ref: '#/components/x-types/Pet'
                  tags:
                    array:
                      id:
                        $and:
                          - $ref: '#/components/x-types/Id'
                      name: string::min(1)
                      $descriptions:
                        id: Tag ID
                        name: Tag name
                  status:
                    - available
                    - pending
                    - sold
                  petType: string
                  $discriminator:
                    propertyName: petType
                    mapping:
                      cat: '#/components/schemas/Cat'
                      dog: '#/components/schemas/Dog'
                      bee: '#/components/schemas/HoneyBee'
                  $descriptions:
                    id: Pet ID
                    category: Categories this pet belongs to
                    name: The name given to a pet
                    photoUrls: The list of URL to a cute photos featuring pet
                    tags: Tags attached to the pet
                    status: Pet status in the store
                    petType: Type of a pet
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      description: Pet ID
                      type: integer
                    category:
                      description: Categories this pet belongs to
                      type: object
                      properties:
                        id:
                          description: Category ID
                          type: integer
                        name:
                          description: Category name
                          type: string
                          minLength: 1
                        sub:
                          description: Test Sub Category
                          type: object
                          properties:
                            prop1:
                              description: Dumb Property
                              type: string
                          required:
                            - prop1
                          additionalProperties: false
                      required:
                        - id
                        - name
                        - sub
                      additionalProperties: false
                    name:
                      description: The name given to a pet
                      type: string
                    photoUrls:
                      description: The list of URL to a cute photos featuring pet
                      type: array
                      items:
                        type: string
                        format: url
                    friend:
                      type: object
                      properties:
                        id:
                          description: Pet ID
                          type: integer
                        category:
                          description: Categories this pet belongs to
                          type: object
                          properties:
                            id:
                              description: Category ID
                              type: integer
                            name:
                              description: Category name
                              type: string
                              minLength: 1
                            sub:
                              description: Test Sub Category
                              type: object
                              properties:
                                prop1:
                                  description: Dumb Property
                                  type: string
                              required:
                                - prop1
                              additionalProperties: false
                          required:
                            - id
                            - name
                            - sub
                          additionalProperties: false
                        name:
                          description: The name given to a pet
                          type: string
                        photoUrls:
                          description: The list of URL to a cute photos featuring pet
                          type: array
                          items:
                            type: string
                            format: url
                        friend:
                          type: object
                          properties:
                            id:
                              description: Pet ID
                              type: integer
                            category:
                              description: Categories this pet belongs to
                              type: object
                              properties:
                                id:
                                  description: Category ID
                                  type: integer
                                name:
                                  description: Category name
                                  type: string
                                  minLength: 1
                                sub:
                                  description: Test Sub Category
                                  type: object
                                  properties:
                                    prop1:
                                      description: Dumb Property
                                      type: string
                                  required:
                                    - prop1
                                  additionalProperties: false
                              required:
                                - id
                                - name
                                - sub
                              additionalProperties: false
                            name:
                              description: The name given to a pet
                              type: string
                            photoUrls:
                              description: The list of URL to a cute photos featuring pet
                              type: array
                              items:
                                type: string
                                format: url
                            friend: {}
                            tags:
                              description: Tags attached to the pet
                              type: array
                              items:
                                type: object
                                properties:
                                  id:
                                    description: Tag ID
                                    type: integer
                                  name:
                                    description: Tag name
                                    type: string
                                    minLength: 1
                                required:
                                  - id
                                  - name
                                additionalProperties: false
                            status:
                              description: Pet status in the store
                              type: string
                              enum:
                                - available
                                - pending
                                - sold
                            petType:
                              description: Type of a pet
                              type: string
                          required:
                            - id
                            - category
                            - name
                            - photoUrls
                            - friend
                            - tags
                            - status
                            - petType
                          additionalProperties: false
                          discriminator:
                            propertyName: petType
                            mapping:
                              cat: '#/components/schemas/Cat'
                              dog: '#/components/schemas/Dog'
                              bee: '#/components/schemas/HoneyBee'
                        tags:
                          description: Tags attached to the pet
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                description: Tag ID
                                type: integer
                              name:
                                description: Tag name
                                type: string
                                minLength: 1
                            required:
                              - id
                              - name
                            additionalProperties: false
                        status:
                          description: Pet status in the store
                          type: string
                          enum:
                            - available
                            - pending
                            - sold
                        petType:
                          description: Type of a pet
                          type: string
                      required:
                        - id
                        - category
                        - name
                        - photoUrls
                        - friend
                        - tags
                        - status
                        - petType
                      additionalProperties: false
                      discriminator:
                        propertyName: petType
                        mapping:
                          cat: '#/components/schemas/Cat'
                          dog: '#/components/schemas/Dog'
                          bee: '#/components/schemas/HoneyBee'
                    tags:
                      description: Tags attached to the pet
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            description: Tag ID
                            type: integer
                          name:
                            description: Tag name
                            type: string
                            minLength: 1
                        required:
                          - id
                          - name
                        additionalProperties: false
                    status:
                      description: Pet status in the store
                      type: string
                      enum:
                        - available
                        - pending
                        - sold
                    petType:
                      description: Type of a pet
                      type: string
                  required:
                    - id
                    - category
                    - name
                    - photoUrls
                    - friend
                    - tags
                    - status
                    - petType
                  additionalProperties: false
                  discriminator:
                    propertyName: petType
                    mapping:
                      cat: '#/components/schemas/Cat'
                      dog: '#/components/schemas/Dog'
                      bee: '#/components/schemas/HoneyBee'
            application/xml:
              x-type:
                array:
                  id:
                    $and:
                      - $ref: '#/components/x-types/Id'
                  category:
                    $and:
                      - $ref: '#/components/x-types/Category'
                  name: string
                  photoUrls:
                    array: string::url
                  friend:
                    $and:
                      - $ref: '#/components/x-types/Pet'
                  tags:
                    array:
                      id:
                        $and:
                          - $ref: '#/components/x-types/Id'
                      name: string::min(1)
                      $descriptions:
                        id: Tag ID
                        name: Tag name
                  status:
                    - available
                    - pending
                    - sold
                  petType: string
                  $discriminator:
                    propertyName: petType
                    mapping:
                      cat: '#/components/schemas/Cat'
                      dog: '#/components/schemas/Dog'
                      bee: '#/components/schemas/HoneyBee'
                  $descriptions:
                    id: Pet ID
                    category: Categories this pet belongs to
                    name: The name given to a pet
                    photoUrls: The list of URL to a cute photos featuring pet
                    tags: Tags attached to the pet
                    status: Pet status in the store
                    petType: Type of a pet
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      description: Pet ID
                      type: integer
                    category:
                      description: Categories this pet belongs to
                      type: object
                      properties:
                        id:
                          description: Category ID
                          type: integer
                        name:
                          description: Category name
                          type: string
                          minLength: 1
                        sub:
                          description: Test Sub Category
                          type: object
                          properties:
                            prop1:
                              description: Dumb Property
                              type: string
                          required:
                            - prop1
                          additionalProperties: false
                      required:
                        - id
                        - name
                        - sub
                      additionalProperties: false
                    name:
                      description: The name given to a pet
                      type: string
                    photoUrls:
                      description: The list of URL to a cute photos featuring pet
                      type: array
                      items:
                        type: string
                        format: url
                    friend:
                      type: object
                      properties:
                        id:
                          description: Pet ID
                          type: integer
                        category:
                          description: Categories this pet belongs to
                          type: object
                          properties:
                            id:
                              description: Category ID
                              type: integer
                            name:
                              description: Category name
                              type: string
                              minLength: 1
                            sub:
                              description: Test Sub Category
                              type: object
                              properties:
                                prop1:
                                  description: Dumb Property
                                  type: string
                              required:
                                - prop1
                              additionalProperties: false
                          required:
                            - id
                            - name
                            - sub
                          additionalProperties: false
                        name:
                          description: The name given to a pet
                          type: string
                        photoUrls:
                          description: The list of URL to a cute photos featuring pet
                          type: array
                          items:
                            type: string
                            format: url
                        friend:
                          type: object
                          properties:
                            id:
                              description: Pet ID
                              type: integer
                            category:
                              description: Categories this pet belongs to
                              type: object
                              properties:
                                id:
                                  description: Category ID
                                  type: integer
                                name:
                                  description: Category name
                                  type: string
                                  minLength: 1
                                sub:
                                  description: Test Sub Category
                                  type: object
                                  properties:
                                    prop1:
                                      description: Dumb Property
                                      type: string
                                  required:
                                    - prop1
                                  additionalProperties: false
                              required:
                                - id
                                - name
                                - sub
                              additionalProperties: false
                            name:
                              description: The name given to a pet
                              type: string
                            photoUrls:
                              description: The list of URL to a cute photos featuring pet
                              type: array
                              items:
                                type: string
                                format: url
                            friend: {}
                            tags:
                              description: Tags attached to the pet
                              type: array
                              items:
                                type: object
                                properties:
                                  id:
                                    description: Tag ID
                                    type: integer
                                  name:
                                    description: Tag name
                                    type: string
                                    minLength: 1
                                required:
                                  - id
                                  - name
                                additionalProperties: false
                            status:
                              description: Pet status in the store
                              type: string
                              enum:
                                - available
                                - pending
                                - sold
                            petType:
                              description: Type of a pet
                              type: string
                          required:
                            - id
                            - category
                            - name
                            - photoUrls
                            - friend
                            - tags
                            - status
                            - petType
                          additionalProperties: false
                          discriminator:
                            propertyName: petType
                            mapping:
                              cat: '#/components/schemas/Cat'
                              dog: '#/components/schemas/Dog'
                              bee: '#/components/schemas/HoneyBee'
                        tags:
                          description: Tags attached to the pet
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                description: Tag ID
                                type: integer
                              name:
                                description: Tag name
                                type: string
                                minLength: 1
                            required:
                              - id
                              - name
                            additionalProperties: false
                        status:
                          description: Pet status in the store
                          type: string
                          enum:
                            - available
                            - pending
                            - sold
                        petType:
                          description: Type of a pet
                          type: string
                      required:
                        - id
                        - category
                        - name
                        - photoUrls
                        - friend
                        - tags
                        - status
                        - petType
                      additionalProperties: false
                      discriminator:
                        propertyName: petType
                        mapping:
                          cat: '#/components/schemas/Cat'
                          dog: '#/components/schemas/Dog'
                          bee: '#/components/schemas/HoneyBee'
                    tags:
                      description: Tags attached to the pet
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            description: Tag ID
                            type: integer
                          name:
                            description: Tag name
                            type: string
                            minLength: 1
                        required:
                          - id
                          - name
                        additionalProperties: false
                    status:
                      description: Pet status in the store
                      type: string
                      enum:
                        - available
                        - pending
                        - sold
                    petType:
                      description: Type of a pet
                      type: string
                  required:
                    - id
                    - category
                    - name
                    - photoUrls
                    - friend
                    - tags
                    - status
                    - petType
                  additionalProperties: false
                  discriminator:
                    propertyName: petType
                    mapping:
                      cat: '#/components/schemas/Cat'
                      dog: '#/components/schemas/Dog'
                      bee: '#/components/schemas/HoneyBee'
        '400':
          description: Invalid tag value
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /store/inventory:
    get:
      tags:
        - store
      summary: Returns pet inventories by status
      description: Returns a map of status codes to quantities
      operationId: getInventory
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              x-type:
                string: number::integer
              schema:
                type: object
                properties: {}
                required: []
                additionalProperties:
                  type: integer
      security:
        - api_key: []
  /store/order:
    post:
      tags:
        - store
      summary: Place an order for a pet
      description: ''
      operationId: placeOrder
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              x-type:
                id:
                  $and:
                    - $ref: '#/components/x-types/Id'
                petId:
                  $and:
                    - $ref: '#/components/x-types/Id'
                quantity: number::integer::min(1)
                shipDate: string::date-time
                status:
                  - placed
                  - approved
                  - delivered
                complete:
                  $readonly: boolean
                requestId:
                  $writeonly: string
                $descriptions:
                  id: Order ID
                  petId: Pet ID
                  shipDate: Estimated ship date
                  status: Order Status
                  complete: Indicates whenever order was completed or not
                  requestId: Unique Request Id
              schema:
                type: object
                properties:
                  id:
                    description: Order ID
                    type: integer
                  petId:
                    description: Pet ID
                    type: integer
                  quantity:
                    type: integer
                    minimum: 1
                  shipDate:
                    description: Estimated ship date
                    type: string
                    format: date-time
                  status:
                    description: Order Status
                    type: string
                    enum:
                      - placed
                      - approved
                      - delivered
                  complete:
                    description: Indicates whenever order was completed or not
                    type: boolean
                  requestId:
                    description: Unique Request Id
                    not: {}
                required:
                  - id
                  - petId
                  - quantity
                  - shipDate
                  - status
                  - complete
                additionalProperties: false
            application/xml:
              x-type:
                id:
                  $and:
                    - $ref: '#/components/x-types/Id'
                petId:
                  $and:
                    - $ref: '#/components/x-types/Id'
                quantity: number::integer::min(1)
                shipDate: string::date-time
                status:
                  - placed
                  - approved
                  - delivered
                complete:
                  $readonly: boolean
                requestId:
                  $writeonly: string
                $descriptions:
                  id: Order ID
                  petId: Pet ID
                  shipDate: Estimated ship date
                  status: Order Status
                  complete: Indicates whenever order was completed or not
                  requestId: Unique Request Id
              schema:
                type: object
                properties:
                  id:
                    description: Order ID
                    type: integer
                  petId:
                    description: Pet ID
                    type: integer
                  quantity:
                    type: integer
                    minimum: 1
                  shipDate:
                    description: Estimated ship date
                    type: string
                    format: date-time
                  status:
                    description: Order Status
                    type: string
                    enum:
                      - placed
                      - approved
                      - delivered
                  complete:
                    description: Indicates whenever order was completed or not
                    type: boolean
                  requestId:
                    description: Unique Request Id
                    not: {}
                required:
                  - id
                  - petId
                  - quantity
                  - shipDate
                  - status
                  - complete
                additionalProperties: false
        '400':
          description: Invalid Order
          content:
            application/json:
              example:
                status: 400
                message: Invalid Order
      requestBody:
        content:
          application/json:
            x-type:
              id:
                $and:
                  - $ref: '#/components/x-types/Id'
              petId:
                $and:
                  - $ref: '#/components/x-types/Id'
              quantity: number::integer::min(1)
              shipDate: string::date-time
              status:
                - placed
                - approved
                - delivered
              complete:
                $readonly: boolean
              requestId:
                $writeonly: string
              $descriptions:
                id: Order ID
                petId: Pet ID
                shipDate: Estimated ship date
                status: Order Status
                complete: Indicates whenever order was completed or not
                requestId: Unique Request Id
            schema:
              type: object
              properties:
                id:
                  description: Order ID
                  not: {}
                petId:
                  description: Pet ID
                  not: {}
                quantity:
                  type: integer
                  minimum: 1
                shipDate:
                  description: Estimated ship date
                  type: string
                  format: date-time
                status:
                  description: Order Status
                  type: string
                  enum:
                    - placed
                    - approved
                    - delivered
                complete:
                  description: Indicates whenever order was completed or not
                  not: {}
                requestId:
                  description: Unique Request Id
                  type: string
              required:
                - quantity
                - shipDate
                - status
                - requestId
              additionalProperties: false
        description: order placed for purchasing the pet
        required: true
  /store/order/{orderId}:
    get:
      tags:
        - store
      summary: Find purchase order by ID
      description: For valid response try integer IDs with value <= 5 or > 10. Other values will generated exceptions
      operationId: getOrderById
      parameters:
        - name: orderId
          in: path
          description: ID of pet that needs to be fetched
          required: true
          x-type: number::integer::min(1)::max(5)
          schema:
            type: integer
            minimum: 1
            maximum: 5
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              x-type:
                id:
                  $and:
                    - $ref: '#/components/x-types/Id'
                petId:
                  $and:
                    - $ref: '#/components/x-types/Id'
                quantity: number::integer::min(1)
                shipDate: string::date-time
                status:
                  - placed
                  - approved
                  - delivered
                complete:
                  $readonly: boolean
                requestId:
                  $writeonly: string
                $descriptions:
                  id: Order ID
                  petId: Pet ID
                  shipDate: Estimated ship date
                  status: Order Status
                  complete: Indicates whenever order was completed or not
                  requestId: Unique Request Id
              schema:
                type: object
                properties:
                  id:
                    description: Order ID
                    type: integer
                  petId:
                    description: Pet ID
                    type: integer
                  quantity:
                    type: integer
                    minimum: 1
                  shipDate:
                    description: Estimated ship date
                    type: string
                    format: date-time
                  status:
                    description: Order Status
                    type: string
                    enum:
                      - placed
                      - approved
                      - delivered
                  complete:
                    description: Indicates whenever order was completed or not
                    type: boolean
                  requestId:
                    description: Unique Request Id
                    not: {}
                required:
                  - id
                  - petId
                  - quantity
                  - shipDate
                  - status
                  - complete
                additionalProperties: false
            application/xml:
              x-type:
                id:
                  $and:
                    - $ref: '#/components/x-types/Id'
                petId:
                  $and:
                    - $ref: '#/components/x-types/Id'
                quantity: number::integer::min(1)
                shipDate: string::date-time
                status:
                  - placed
                  - approved
                  - delivered
                complete:
                  $readonly: boolean
                requestId:
                  $writeonly: string
                $descriptions:
                  id: Order ID
                  petId: Pet ID
                  shipDate: Estimated ship date
                  status: Order Status
                  complete: Indicates whenever order was completed or not
                  requestId: Unique Request Id
              schema:
                type: object
                properties:
                  id:
                    description: Order ID
                    type: integer
                  petId:
                    description: Pet ID
                    type: integer
                  quantity:
                    type: integer
                    minimum: 1
                  shipDate:
                    description: Estimated ship date
                    type: string
                    format: date-time
                  status:
                    description: Order Status
                    type: string
                    enum:
                      - placed
                      - approved
                      - delivered
                  complete:
                    description: Indicates whenever order was completed or not
                    type: boolean
                  requestId:
                    description: Unique Request Id
                    not: {}
                required:
                  - id
                  - petId
                  - quantity
                  - shipDate
                  - status
                  - complete
                additionalProperties: false
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found
    delete:
      tags:
        - store
      summary: Delete purchase order by ID
      description: For valid response try integer IDs with value < 1000. Anything above 1000 or nonintegers will generate API errors
      operationId: deleteOrder
      parameters:
        - name: orderId
          in: path
          description: ID of the order that needs to be deleted
          required: true
          x-type: string::min(1)
          schema:
            type: string
            minLength: 1
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found
  /store/subscribe:
    post:
      tags:
        - store
      summary: Subscribe to the Store events
      description: Add subscription for a store events
      requestBody:
        content:
          application/json:
            x-type:
              callbackUrl: string::uri
              eventName:
                - orderInProgress
                - orderShipped
                - orderDelivered
              $descriptions:
                callbackUrl: This URL will be called by the server when the desired event will occur
                eventName: Event name for the subscription
            schema:
              type: object
              properties:
                callbackUrl:
                  description: This URL will be called by the server when the desired event will occur
                  type: string
                  format: uri
                eventName:
                  description: Event name for the subscription
                  type: string
                  enum:
                    - orderInProgress
                    - orderShipped
                    - orderDelivered
              required:
                - callbackUrl
                - eventName
              additionalProperties: false
      responses:
        '201':
          description: Subscription added
          content:
            application/json:
              x-type:
                subscriptionId: string
              schema:
                type: object
                properties:
                  subscriptionId:
                    type: string
                required:
                  - subscriptionId
                additionalProperties: false
      callbacks:
        orderInProgress:
          '{$request.body#/callbackUrl}?event={$request.body#/eventName}':
            servers:
              - url: //callback-url.path-level/v1
                description: Path level server 1
              - url: //callback-url.path-level/v2
                description: Path level server 2
            post:
              summary: Order in Progress (Summary)
              description: A callback triggered every time an Order is updated status to "inProgress" (Description)
              externalDocs:
                description: Find out more
                url: https://more-details.com/demo
              requestBody:
                content:
                  application/json:
                    x-type:
                      orderId: string
                      timestamp: string::date-time
                      status: string
                    schema:
                      type: object
                      properties:
                        orderId:
                          type: string
                        timestamp:
                          type: string
                          format: date-time
                        status:
                          type: string
                      required:
                        - orderId
                        - timestamp
                        - status
                      additionalProperties: false
                  application/xml:
                    example: |
                      <?xml version="1.0" encoding="UTF-8"?>
                      <root>
                        <orderId>123</orderId>
                        <status>inProgress</status>
                        <timestamp>2018-10-19T16:46:45Z</timestamp>
                      </root>
                    x-type:
                      orderId: string
                    schema:
                      type: object
                      properties:
                        orderId:
                          type: string
                      required:
                        - orderId
                      additionalProperties: false
              responses:
                '200':
                  description: Callback successfully processed and no retries will be performed
                  content:
                    application/json:
                      x-type:
                        someProp: string
                      schema:
                        type: object
                        properties:
                          someProp:
                            type: string
                        required:
                          - someProp
                        additionalProperties: false
                '299':
                  description: Response for cancelling subscription
                '500':
                  description: Callback processing failed and retries will be performed
              x-codeSamples:
                - lang: C#
                  source: |
                    PetStore.v1.Pet pet = new PetStore.v1.Pet();
                    pet.setApiKey("your api key");
                    pet.petType = PetStore.v1.Pet.TYPE_DOG;
                    pet.name = "Rex";
                    // set other fields
                    PetStoreResponse response = pet.create();
                    if (response.statusCode == HttpStatusCode.Created)
                    {
                      // Successfully created
                    }
                    else
                    {
                      // Something wrong -- check response for errors
                      Console.WriteLine(response.getRawResponse());
                    }
                - lang: PHP
                  source: |
                    $form = new \PetStore\Entities\Pet();
                    $form->setPetType("Dog");
                    $form->setName("Rex");
                    // set other fields
                    try {
                        $pet = $client->pets()->create($form);
                    } catch (UnprocessableEntityException $e) {
                        var_dump($e->getErrors());
                    }
            put:
              description: Order in Progress (Only Description)
              servers:
                - url: //callback-url.operation-level/v1
                  description: Operation level server 1 (Operation override)
                - url: //callback-url.operation-level/v2
                  description: Operation level server 2 (Operation override)
              requestBody:
                content:
                  application/json:
                    x-type:
                      orderId: string
                      timestamp: string::date-time
                      status: string
                    schema:
                      type: object
                      properties:
                        orderId:
                          type: string
                        timestamp:
                          type: string
                          format: date-time
                        status:
                          type: string
                      required:
                        - orderId
                        - timestamp
                        - status
                      additionalProperties: false
                  application/xml:
                    example: |
                      <?xml version="1.0" encoding="UTF-8"?>
                      <root>
                        <orderId>123</orderId>
                        <status>inProgress</status>
                        <timestamp>2018-10-19T16:46:45Z</timestamp>
                      </root>
                    x-type:
                      orderId: string
                    schema:
                      type: object
                      properties:
                        orderId:
                          type: string
                      required:
                        - orderId
                      additionalProperties: false
              responses:
                '200':
                  description: Callback successfully processed and no retries will be performed
                  content:
                    application/json:
                      x-type:
                        someProp: string
                      schema:
                        type: object
                        properties:
                          someProp:
                            type: string
                        required:
                          - someProp
                        additionalProperties: false
        orderShipped:
          '{$request.body#/callbackUrl}?event={$request.body#/eventName}':
            post:
              description: |
                Very long description
                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor
                incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis
                nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
                Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu
                fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in
                culpa qui officia deserunt mollit anim id est laborum.
              requestBody:
                content:
                  application/json:
                    x-type:
                      orderId: string
                      timestamp: string::date-time
                      estimatedDeliveryDate: string::date-time
                    schema:
                      type: object
                      properties:
                        orderId:
                          type: string
                        timestamp:
                          type: string
                          format: date-time
                        estimatedDeliveryDate:
                          type: string
                          format: date-time
                      required:
                        - orderId
                        - timestamp
                        - estimatedDeliveryDate
                      additionalProperties: false
              responses:
                '200':
                  description: Callback successfully processed and no retries will be performed
        orderDelivered:
          http://notificationServer.com?url={$request.body#/callbackUrl}&event={$request.body#/eventName}:
            post:
              deprecated: true
              summary: Order delivered
              description: A callback triggered every time an Order is delivered to the recipient
              requestBody:
                content:
                  application/json:
                    x-type:
                      orderId: string
                      timestamp: string::date-time
                    schema:
                      type: object
                      properties:
                        orderId:
                          type: string
                        timestamp:
                          type: string
                          format: date-time
                      required:
                        - orderId
                        - timestamp
                      additionalProperties: false
              responses:
                '200':
                  description: Callback successfully processed and no retries will be performed
  /user:
    post:
      tags:
        - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      responses:
        default:
          description: successful operation
      requestBody:
        content:
          application/json:
            x-type:
              id:
                $readonly: number::integer
              pet:
                - $ref: '#/components/x-types/Pet'
                - $ref: '#/components/x-types/Tag'
              username: string::min(4)
              firstName: string::min(1)
              lastName: string::min(1)
              email: string::email
              password: string::password::pattern(/(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/)::min(8)
              phone: string::pattern(/^\+(?:[0-9]-?){6,14}[0-9]$/)
              userStatus: number::integer
              $descriptions:
                username: User supplied username
                firstName: User first name
                lastName: User last name
                email: User email address
                password: User password, MUST contain a mix of upper and lower case letters, as well as digits
                phone: User phone number in international format
                userStatus: User status
            schema:
              type: object
              properties:
                id:
                  not: {}
                pet:
                  anyOf:
                    - type: object
                      properties:
                        id:
                          description: Pet ID
                          not: {}
                        category:
                          description: Categories this pet belongs to
                          type: object
                          properties:
                            id:
                              description: Category ID
                              not: {}
                            name:
                              description: Category name
                              type: string
                              minLength: 1
                            sub:
                              description: Test Sub Category
                              type: object
                              properties:
                                prop1:
                                  description: Dumb Property
                                  type: string
                              required:
                                - prop1
                              additionalProperties: false
                          required:
                            - name
                            - sub
                          additionalProperties: false
                        name:
                          description: The name given to a pet
                          type: string
                        photoUrls:
                          description: The list of URL to a cute photos featuring pet
                          type: array
                          items:
                            type: string
                            format: url
                        friend:
                          type: object
                          properties:
                            id:
                              description: Pet ID
                              not: {}
                            category:
                              description: Categories this pet belongs to
                              type: object
                              properties:
                                id:
                                  description: Category ID
                                  not: {}
                                name:
                                  description: Category name
                                  type: string
                                  minLength: 1
                                sub:
                                  description: Test Sub Category
                                  type: object
                                  properties:
                                    prop1:
                                      description: Dumb Property
                                      type: string
                                  required:
                                    - prop1
                                  additionalProperties: false
                              required:
                                - name
                                - sub
                              additionalProperties: false
                            name:
                              description: The name given to a pet
                              type: string
                            photoUrls:
                              description: The list of URL to a cute photos featuring pet
                              type: array
                              items:
                                type: string
                                format: url
                            friend:
                              type: object
                              properties:
                                id:
                                  description: Pet ID
                                  not: {}
                                category:
                                  description: Categories this pet belongs to
                                  type: object
                                  properties:
                                    id:
                                      description: Category ID
                                      not: {}
                                    name:
                                      description: Category name
                                      type: string
                                      minLength: 1
                                    sub:
                                      description: Test Sub Category
                                      type: object
                                      properties:
                                        prop1:
                                          description: Dumb Property
                                          type: string
                                      required:
                                        - prop1
                                      additionalProperties: false
                                  required:
                                    - name
                                    - sub
                                  additionalProperties: false
                                name:
                                  description: The name given to a pet
                                  type: string
                                photoUrls:
                                  description: The list of URL to a cute photos featuring pet
                                  type: array
                                  items:
                                    type: string
                                    format: url
                                friend: {}
                                tags:
                                  description: Tags attached to the pet
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      id:
                                        description: Tag ID
                                        not: {}
                                      name:
                                        description: Tag name
                                        type: string
                                        minLength: 1
                                    required:
                                      - name
                                    additionalProperties: false
                                status:
                                  description: Pet status in the store
                                  type: string
                                  enum:
                                    - available
                                    - pending
                                    - sold
                                petType:
                                  description: Type of a pet
                                  type: string
                              required:
                                - category
                                - name
                                - photoUrls
                                - friend
                                - tags
                                - status
                                - petType
                              additionalProperties: false
                              discriminator:
                                propertyName: petType
                                mapping:
                                  cat: '#/components/schemas/Cat'
                                  dog: '#/components/schemas/Dog'
                                  bee: '#/components/schemas/HoneyBee'
                            tags:
                              description: Tags attached to the pet
                              type: array
                              items:
                                type: object
                                properties:
                                  id:
                                    description: Tag ID
                                    not: {}
                                  name:
                                    description: Tag name
                                    type: string
                                    minLength: 1
                                required:
                                  - name
                                additionalProperties: false
                            status:
                              description: Pet status in the store
                              type: string
                              enum:
                                - available
                                - pending
                                - sold
                            petType:
                              description: Type of a pet
                              type: string
                          required:
                            - category
                            - name
                            - photoUrls
                            - friend
                            - tags
                            - status
                            - petType
                          additionalProperties: false
                          discriminator:
                            propertyName: petType
                            mapping:
                              cat: '#/components/schemas/Cat'
                              dog: '#/components/schemas/Dog'
                              bee: '#/components/schemas/HoneyBee'
                        tags:
                          description: Tags attached to the pet
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                description: Tag ID
                                not: {}
                              name:
                                description: Tag name
                                type: string
                                minLength: 1
                            required:
                              - name
                            additionalProperties: false
                        status:
                          description: Pet status in the store
                          type: string
                          enum:
                            - available
                            - pending
                            - sold
                        petType:
                          description: Type of a pet
                          type: string
                      required:
                        - category
                        - name
                        - photoUrls
                        - friend
                        - tags
                        - status
                        - petType
                      additionalProperties: false
                      discriminator:
                        propertyName: petType
                        mapping:
                          cat: '#/components/schemas/Cat'
                          dog: '#/components/schemas/Dog'
                          bee: '#/components/schemas/HoneyBee'
                    - type: object
                      properties:
                        id:
                          description: Tag ID
                          not: {}
                        name:
                          description: Tag name
                          type: string
                          minLength: 1
                      required:
                        - name
                      additionalProperties: false
                username:
                  description: User supplied username
                  type: string
                  minLength: 4
                firstName:
                  description: User first name
                  type: string
                  minLength: 1
                lastName:
                  description: User last name
                  type: string
                  minLength: 1
                email:
                  description: User email address
                  type: string
                  format: email
                password:
                  description: User password, MUST contain a mix of upper and lower case letters, as well as digits
                  type: string
                  format: password
                  pattern: /(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/
                  minLength: 8
                phone:
                  description: User phone number in international format
                  type: string
                  pattern: /^\+(?:[0-9]-?){6,14}[0-9]$/
                userStatus:
                  description: User status
                  type: integer
              required:
                - pet
                - username
                - firstName
                - lastName
                - email
                - password
                - phone
                - userStatus
              additionalProperties: false
        description: Created user object
        required: true
  /user/{username}:
    get:
      tags:
        - user
      summary: Get user by user name
      description: ''
      operationId: getUserByName
      parameters:
        - name: username
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          x-type: string
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              x-type:
                id:
                  $readonly: number::integer
                pet:
                  - $ref: '#/components/x-types/Pet'
                  - $ref: '#/components/x-types/Tag'
                username: string::min(4)
                firstName: string::min(1)
                lastName: string::min(1)
                email: string::email
                password: string::password::pattern(/(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/)::min(8)
                phone: string::pattern(/^\+(?:[0-9]-?){6,14}[0-9]$/)
                userStatus: number::integer
                $descriptions:
                  username: User supplied username
                  firstName: User first name
                  lastName: User last name
                  email: User email address
                  password: User password, MUST contain a mix of upper and lower case letters, as well as digits
                  phone: User phone number in international format
                  userStatus: User status
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  pet:
                    anyOf:
                      - type: object
                        properties:
                          id:
                            description: Pet ID
                            type: integer
                          category:
                            description: Categories this pet belongs to
                            type: object
                            properties:
                              id:
                                description: Category ID
                                type: integer
                              name:
                                description: Category name
                                type: string
                                minLength: 1
                              sub:
                                description: Test Sub Category
                                type: object
                                properties:
                                  prop1:
                                    description: Dumb Property
                                    type: string
                                required:
                                  - prop1
                                additionalProperties: false
                            required:
                              - id
                              - name
                              - sub
                            additionalProperties: false
                          name:
                            description: The name given to a pet
                            type: string
                          photoUrls:
                            description: The list of URL to a cute photos featuring pet
                            type: array
                            items:
                              type: string
                              format: url
                          friend:
                            type: object
                            properties:
                              id:
                                description: Pet ID
                                type: integer
                              category:
                                description: Categories this pet belongs to
                                type: object
                                properties:
                                  id:
                                    description: Category ID
                                    type: integer
                                  name:
                                    description: Category name
                                    type: string
                                    minLength: 1
                                  sub:
                                    description: Test Sub Category
                                    type: object
                                    properties:
                                      prop1:
                                        description: Dumb Property
                                        type: string
                                    required:
                                      - prop1
                                    additionalProperties: false
                                required:
                                  - id
                                  - name
                                  - sub
                                additionalProperties: false
                              name:
                                description: The name given to a pet
                                type: string
                              photoUrls:
                                description: The list of URL to a cute photos featuring pet
                                type: array
                                items:
                                  type: string
                                  format: url
                              friend:
                                type: object
                                properties:
                                  id:
                                    description: Pet ID
                                    type: integer
                                  category:
                                    description: Categories this pet belongs to
                                    type: object
                                    properties:
                                      id:
                                        description: Category ID
                                        type: integer
                                      name:
                                        description: Category name
                                        type: string
                                        minLength: 1
                                      sub:
                                        description: Test Sub Category
                                        type: object
                                        properties:
                                          prop1:
                                            description: Dumb Property
                                            type: string
                                        required:
                                          - prop1
                                        additionalProperties: false
                                    required:
                                      - id
                                      - name
                                      - sub
                                    additionalProperties: false
                                  name:
                                    description: The name given to a pet
                                    type: string
                                  photoUrls:
                                    description: The list of URL to a cute photos featuring pet
                                    type: array
                                    items:
                                      type: string
                                      format: url
                                  friend: {}
                                  tags:
                                    description: Tags attached to the pet
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        id:
                                          description: Tag ID
                                          type: integer
                                        name:
                                          description: Tag name
                                          type: string
                                          minLength: 1
                                      required:
                                        - id
                                        - name
                                      additionalProperties: false
                                  status:
                                    description: Pet status in the store
                                    type: string
                                    enum:
                                      - available
                                      - pending
                                      - sold
                                  petType:
                                    description: Type of a pet
                                    type: string
                                required:
                                  - id
                                  - category
                                  - name
                                  - photoUrls
                                  - friend
                                  - tags
                                  - status
                                  - petType
                                additionalProperties: false
                                discriminator:
                                  propertyName: petType
                                  mapping:
                                    cat: '#/components/schemas/Cat'
                                    dog: '#/components/schemas/Dog'
                                    bee: '#/components/schemas/HoneyBee'
                              tags:
                                description: Tags attached to the pet
                                type: array
                                items:
                                  type: object
                                  properties:
                                    id:
                                      description: Tag ID
                                      type: integer
                                    name:
                                      description: Tag name
                                      type: string
                                      minLength: 1
                                  required:
                                    - id
                                    - name
                                  additionalProperties: false
                              status:
                                description: Pet status in the store
                                type: string
                                enum:
                                  - available
                                  - pending
                                  - sold
                              petType:
                                description: Type of a pet
                                type: string
                            required:
                              - id
                              - category
                              - name
                              - photoUrls
                              - friend
                              - tags
                              - status
                              - petType
                            additionalProperties: false
                            discriminator:
                              propertyName: petType
                              mapping:
                                cat: '#/components/schemas/Cat'
                                dog: '#/components/schemas/Dog'
                                bee: '#/components/schemas/HoneyBee'
                          tags:
                            description: Tags attached to the pet
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  description: Tag ID
                                  type: integer
                                name:
                                  description: Tag name
                                  type: string
                                  minLength: 1
                              required:
                                - id
                                - name
                              additionalProperties: false
                          status:
                            description: Pet status in the store
                            type: string
                            enum:
                              - available
                              - pending
                              - sold
                          petType:
                            description: Type of a pet
                            type: string
                        required:
                          - id
                          - category
                          - name
                          - photoUrls
                          - friend
                          - tags
                          - status
                          - petType
                        additionalProperties: false
                        discriminator:
                          propertyName: petType
                          mapping:
                            cat: '#/components/schemas/Cat'
                            dog: '#/components/schemas/Dog'
                            bee: '#/components/schemas/HoneyBee'
                      - type: object
                        properties:
                          id:
                            description: Tag ID
                            type: integer
                          name:
                            description: Tag name
                            type: string
                            minLength: 1
                        required:
                          - id
                          - name
                        additionalProperties: false
                  username:
                    description: User supplied username
                    type: string
                    minLength: 4
                  firstName:
                    description: User first name
                    type: string
                    minLength: 1
                  lastName:
                    description: User last name
                    type: string
                    minLength: 1
                  email:
                    description: User email address
                    type: string
                    format: email
                  password:
                    description: User password, MUST contain a mix of upper and lower case letters, as well as digits
                    type: string
                    format: password
                    pattern: /(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/
                    minLength: 8
                  phone:
                    description: User phone number in international format
                    type: string
                    pattern: /^\+(?:[0-9]-?){6,14}[0-9]$/
                  userStatus:
                    description: User status
                    type: integer
                required:
                  - id
                  - pet
                  - username
                  - firstName
                  - lastName
                  - email
                  - password
                  - phone
                  - userStatus
                additionalProperties: false
            application/xml:
              x-type:
                id:
                  $readonly: number::integer
                pet:
                  - $ref: '#/components/x-types/Pet'
                  - $ref: '#/components/x-types/Tag'
                username: string::min(4)
                firstName: string::min(1)
                lastName: string::min(1)
                email: string::email
                password: string::password::pattern(/(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/)::min(8)
                phone: string::pattern(/^\+(?:[0-9]-?){6,14}[0-9]$/)
                userStatus: number::integer
                $descriptions:
                  username: User supplied username
                  firstName: User first name
                  lastName: User last name
                  email: User email address
                  password: User password, MUST contain a mix of upper and lower case letters, as well as digits
                  phone: User phone number in international format
                  userStatus: User status
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  pet:
                    anyOf:
                      - type: object
                        properties:
                          id:
                            description: Pet ID
                            type: integer
                          category:
                            description: Categories this pet belongs to
                            type: object
                            properties:
                              id:
                                description: Category ID
                                type: integer
                              name:
                                description: Category name
                                type: string
                                minLength: 1
                              sub:
                                description: Test Sub Category
                                type: object
                                properties:
                                  prop1:
                                    description: Dumb Property
                                    type: string
                                required:
                                  - prop1
                                additionalProperties: false
                            required:
                              - id
                              - name
                              - sub
                            additionalProperties: false
                          name:
                            description: The name given to a pet
                            type: string
                          photoUrls:
                            description: The list of URL to a cute photos featuring pet
                            type: array
                            items:
                              type: string
                              format: url
                          friend:
                            type: object
                            properties:
                              id:
                                description: Pet ID
                                type: integer
                              category:
                                description: Categories this pet belongs to
                                type: object
                                properties:
                                  id:
                                    description: Category ID
                                    type: integer
                                  name:
                                    description: Category name
                                    type: string
                                    minLength: 1
                                  sub:
                                    description: Test Sub Category
                                    type: object
                                    properties:
                                      prop1:
                                        description: Dumb Property
                                        type: string
                                    required:
                                      - prop1
                                    additionalProperties: false
                                required:
                                  - id
                                  - name
                                  - sub
                                additionalProperties: false
                              name:
                                description: The name given to a pet
                                type: string
                              photoUrls:
                                description: The list of URL to a cute photos featuring pet
                                type: array
                                items:
                                  type: string
                                  format: url
                              friend:
                                type: object
                                properties:
                                  id:
                                    description: Pet ID
                                    type: integer
                                  category:
                                    description: Categories this pet belongs to
                                    type: object
                                    properties:
                                      id:
                                        description: Category ID
                                        type: integer
                                      name:
                                        description: Category name
                                        type: string
                                        minLength: 1
                                      sub:
                                        description: Test Sub Category
                                        type: object
                                        properties:
                                          prop1:
                                            description: Dumb Property
                                            type: string
                                        required:
                                          - prop1
                                        additionalProperties: false
                                    required:
                                      - id
                                      - name
                                      - sub
                                    additionalProperties: false
                                  name:
                                    description: The name given to a pet
                                    type: string
                                  photoUrls:
                                    description: The list of URL to a cute photos featuring pet
                                    type: array
                                    items:
                                      type: string
                                      format: url
                                  friend: {}
                                  tags:
                                    description: Tags attached to the pet
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        id:
                                          description: Tag ID
                                          type: integer
                                        name:
                                          description: Tag name
                                          type: string
                                          minLength: 1
                                      required:
                                        - id
                                        - name
                                      additionalProperties: false
                                  status:
                                    description: Pet status in the store
                                    type: string
                                    enum:
                                      - available
                                      - pending
                                      - sold
                                  petType:
                                    description: Type of a pet
                                    type: string
                                required:
                                  - id
                                  - category
                                  - name
                                  - photoUrls
                                  - friend
                                  - tags
                                  - status
                                  - petType
                                additionalProperties: false
                                discriminator:
                                  propertyName: petType
                                  mapping:
                                    cat: '#/components/schemas/Cat'
                                    dog: '#/components/schemas/Dog'
                                    bee: '#/components/schemas/HoneyBee'
                              tags:
                                description: Tags attached to the pet
                                type: array
                                items:
                                  type: object
                                  properties:
                                    id:
                                      description: Tag ID
                                      type: integer
                                    name:
                                      description: Tag name
                                      type: string
                                      minLength: 1
                                  required:
                                    - id
                                    - name
                                  additionalProperties: false
                              status:
                                description: Pet status in the store
                                type: string
                                enum:
                                  - available
                                  - pending
                                  - sold
                              petType:
                                description: Type of a pet
                                type: string
                            required:
                              - id
                              - category
                              - name
                              - photoUrls
                              - friend
                              - tags
                              - status
                              - petType
                            additionalProperties: false
                            discriminator:
                              propertyName: petType
                              mapping:
                                cat: '#/components/schemas/Cat'
                                dog: '#/components/schemas/Dog'
                                bee: '#/components/schemas/HoneyBee'
                          tags:
                            description: Tags attached to the pet
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  description: Tag ID
                                  type: integer
                                name:
                                  description: Tag name
                                  type: string
                                  minLength: 1
                              required:
                                - id
                                - name
                              additionalProperties: false
                          status:
                            description: Pet status in the store
                            type: string
                            enum:
                              - available
                              - pending
                              - sold
                          petType:
                            description: Type of a pet
                            type: string
                        required:
                          - id
                          - category
                          - name
                          - photoUrls
                          - friend
                          - tags
                          - status
                          - petType
                        additionalProperties: false
                        discriminator:
                          propertyName: petType
                          mapping:
                            cat: '#/components/schemas/Cat'
                            dog: '#/components/schemas/Dog'
                            bee: '#/components/schemas/HoneyBee'
                      - type: object
                        properties:
                          id:
                            description: Tag ID
                            type: integer
                          name:
                            description: Tag name
                            type: string
                            minLength: 1
                        required:
                          - id
                          - name
                        additionalProperties: false
                  username:
                    description: User supplied username
                    type: string
                    minLength: 4
                  firstName:
                    description: User first name
                    type: string
                    minLength: 1
                  lastName:
                    description: User last name
                    type: string
                    minLength: 1
                  email:
                    description: User email address
                    type: string
                    format: email
                  password:
                    description: User password, MUST contain a mix of upper and lower case letters, as well as digits
                    type: string
                    format: password
                    pattern: /(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/
                    minLength: 8
                  phone:
                    description: User phone number in international format
                    type: string
                    pattern: /^\+(?:[0-9]-?){6,14}[0-9]$/
                  userStatus:
                    description: User status
                    type: integer
                required:
                  - id
                  - pet
                  - username
                  - firstName
                  - lastName
                  - email
                  - password
                  - phone
                  - userStatus
                additionalProperties: false
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
    put:
      tags:
        - user
      summary: Updated user
      description: This can only be done by the logged in user.
      operationId: updateUser
      parameters:
        - name: username
          in: path
          description: name that need to be deleted
          required: true
          x-type: string
          schema:
            type: string
      responses:
        '400':
          description: Invalid user supplied
        '404':
          description: User not found
      requestBody:
        content:
          application/json:
            x-type:
              id:
                $readonly: number::integer
              pet:
                - $ref: '#/components/x-types/Pet'
                - $ref: '#/components/x-types/Tag'
              username: string::min(4)
              firstName: string::min(1)
              lastName: string::min(1)
              email: string::email
              password: string::password::pattern(/(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/)::min(8)
              phone: string::pattern(/^\+(?:[0-9]-?){6,14}[0-9]$/)
              userStatus: number::integer
              $descriptions:
                username: User supplied username
                firstName: User first name
                lastName: User last name
                email: User email address
                password: User password, MUST contain a mix of upper and lower case letters, as well as digits
                phone: User phone number in international format
                userStatus: User status
            schema:
              type: object
              properties:
                id:
                  not: {}
                pet:
                  anyOf:
                    - type: object
                      properties:
                        id:
                          description: Pet ID
                          not: {}
                        category:
                          description: Categories this pet belongs to
                          type: object
                          properties:
                            id:
                              description: Category ID
                              not: {}
                            name:
                              description: Category name
                              type: string
                              minLength: 1
                            sub:
                              description: Test Sub Category
                              type: object
                              properties:
                                prop1:
                                  description: Dumb Property
                                  type: string
                              required:
                                - prop1
                              additionalProperties: false
                          required:
                            - name
                            - sub
                          additionalProperties: false
                        name:
                          description: The name given to a pet
                          type: string
                        photoUrls:
                          description: The list of URL to a cute photos featuring pet
                          type: array
                          items:
                            type: string
                            format: url
                        friend:
                          type: object
                          properties:
                            id:
                              description: Pet ID
                              not: {}
                            category:
                              description: Categories this pet belongs to
                              type: object
                              properties:
                                id:
                                  description: Category ID
                                  not: {}
                                name:
                                  description: Category name
                                  type: string
                                  minLength: 1
                                sub:
                                  description: Test Sub Category
                                  type: object
                                  properties:
                                    prop1:
                                      description: Dumb Property
                                      type: string
                                  required:
                                    - prop1
                                  additionalProperties: false
                              required:
                                - name
                                - sub
                              additionalProperties: false
                            name:
                              description: The name given to a pet
                              type: string
                            photoUrls:
                              description: The list of URL to a cute photos featuring pet
                              type: array
                              items:
                                type: string
                                format: url
                            friend:
                              type: object
                              properties:
                                id:
                                  description: Pet ID
                                  not: {}
                                category:
                                  description: Categories this pet belongs to
                                  type: object
                                  properties:
                                    id:
                                      description: Category ID
                                      not: {}
                                    name:
                                      description: Category name
                                      type: string
                                      minLength: 1
                                    sub:
                                      description: Test Sub Category
                                      type: object
                                      properties:
                                        prop1:
                                          description: Dumb Property
                                          type: string
                                      required:
                                        - prop1
                                      additionalProperties: false
                                  required:
                                    - name
                                    - sub
                                  additionalProperties: false
                                name:
                                  description: The name given to a pet
                                  type: string
                                photoUrls:
                                  description: The list of URL to a cute photos featuring pet
                                  type: array
                                  items:
                                    type: string
                                    format: url
                                friend: {}
                                tags:
                                  description: Tags attached to the pet
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      id:
                                        description: Tag ID
                                        not: {}
                                      name:
                                        description: Tag name
                                        type: string
                                        minLength: 1
                                    required:
                                      - name
                                    additionalProperties: false
                                status:
                                  description: Pet status in the store
                                  type: string
                                  enum:
                                    - available
                                    - pending
                                    - sold
                                petType:
                                  description: Type of a pet
                                  type: string
                              required:
                                - category
                                - name
                                - photoUrls
                                - friend
                                - tags
                                - status
                                - petType
                              additionalProperties: false
                              discriminator:
                                propertyName: petType
                                mapping:
                                  cat: '#/components/schemas/Cat'
                                  dog: '#/components/schemas/Dog'
                                  bee: '#/components/schemas/HoneyBee'
                            tags:
                              description: Tags attached to the pet
                              type: array
                              items:
                                type: object
                                properties:
                                  id:
                                    description: Tag ID
                                    not: {}
                                  name:
                                    description: Tag name
                                    type: string
                                    minLength: 1
                                required:
                                  - name
                                additionalProperties: false
                            status:
                              description: Pet status in the store
                              type: string
                              enum:
                                - available
                                - pending
                                - sold
                            petType:
                              description: Type of a pet
                              type: string
                          required:
                            - category
                            - name
                            - photoUrls
                            - friend
                            - tags
                            - status
                            - petType
                          additionalProperties: false
                          discriminator:
                            propertyName: petType
                            mapping:
                              cat: '#/components/schemas/Cat'
                              dog: '#/components/schemas/Dog'
                              bee: '#/components/schemas/HoneyBee'
                        tags:
                          description: Tags attached to the pet
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                description: Tag ID
                                not: {}
                              name:
                                description: Tag name
                                type: string
                                minLength: 1
                            required:
                              - name
                            additionalProperties: false
                        status:
                          description: Pet status in the store
                          type: string
                          enum:
                            - available
                            - pending
                            - sold
                        petType:
                          description: Type of a pet
                          type: string
                      required:
                        - category
                        - name
                        - photoUrls
                        - friend
                        - tags
                        - status
                        - petType
                      additionalProperties: false
                      discriminator:
                        propertyName: petType
                        mapping:
                          cat: '#/components/schemas/Cat'
                          dog: '#/components/schemas/Dog'
                          bee: '#/components/schemas/HoneyBee'
                    - type: object
                      properties:
                        id:
                          description: Tag ID
                          not: {}
                        name:
                          description: Tag name
                          type: string
                          minLength: 1
                      required:
                        - name
                      additionalProperties: false
                username:
                  description: User supplied username
                  type: string
                  minLength: 4
                firstName:
                  description: User first name
                  type: string
                  minLength: 1
                lastName:
                  description: User last name
                  type: string
                  minLength: 1
                email:
                  description: User email address
                  type: string
                  format: email
                password:
                  description: User password, MUST contain a mix of upper and lower case letters, as well as digits
                  type: string
                  format: password
                  pattern: /(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/
                  minLength: 8
                phone:
                  description: User phone number in international format
                  type: string
                  pattern: /^\+(?:[0-9]-?){6,14}[0-9]$/
                userStatus:
                  description: User status
                  type: integer
              required:
                - pet
                - username
                - firstName
                - lastName
                - email
                - password
                - phone
                - userStatus
              additionalProperties: false
        description: Updated user object
        required: true
    delete:
      tags:
        - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      parameters:
        - name: username
          in: path
          description: The name that needs to be deleted
          required: true
          x-type: string
          schema:
            type: string
      responses:
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
  /user/createWithArray:
    post:
      tags:
        - user
      summary: Creates list of users with given input array
      description: ''
      operationId: createUsersWithArrayInput
      responses:
        default:
          description: successful operation
      requestBody:
        $ref: '#/components/requestBodies/UserArray'
  /user/createWithList:
    post:
      tags:
        - user
      summary: Creates list of users with given input array
      description: ''
      operationId: createUsersWithListInput
      responses:
        default:
          description: successful operation
      requestBody:
        $ref: '#/components/requestBodies/UserArray'
  /user/login:
    get:
      tags:
        - user
      summary: Logs user into the system
      description: ''
      operationId: loginUser
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          x-type: string
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          x-type: string
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/json:
              examples:
                response:
                  value: OK
              x-type: string
              schema:
                type: string
            application/xml:
              examples:
                response:
                  value: <Message> OK </Message>
              x-type: string
              schema:
                type: string
            text/plain:
              examples:
                response:
                  value: OK
        '400':
          description: Invalid username/password supplied
  /user/logout:
    get:
      tags:
        - user
      summary: Logs out current logged in user session
      description: ''
      operationId: logoutUser
      responses:
        default:
          description: successful operation
x-webhooks:
  newPet:
    post:
      summary: New pet
      description: Information about a new pet in the systems
      operationId: newPet
      tags:
        - pet
      requestBody:
        content:
          application/json:
            x-type:
              id:
                $and:
                  - $ref: '#/components/x-types/Id'
              category:
                $and:
                  - $ref: '#/components/x-types/Category'
              name: string
              photoUrls:
                array: string::url
              friend:
                $and:
                  - $ref: '#/components/x-types/Pet'
              tags:
                array:
                  id:
                    $and:
                      - $ref: '#/components/x-types/Id'
                  name: string::min(1)
                  $descriptions:
                    id: Tag ID
                    name: Tag name
              status:
                - available
                - pending
                - sold
              petType: string
              $discriminator:
                propertyName: petType
                mapping:
                  cat: '#/components/schemas/Cat'
                  dog: '#/components/schemas/Dog'
                  bee: '#/components/schemas/HoneyBee'
              $descriptions:
                id: Pet ID
                category: Categories this pet belongs to
                name: The name given to a pet
                photoUrls: The list of URL to a cute photos featuring pet
                tags: Tags attached to the pet
                status: Pet status in the store
                petType: Type of a pet
            schema:
              type: object
              properties:
                id:
                  description: Pet ID
                  not: {}
                category:
                  description: Categories this pet belongs to
                  type: object
                  properties:
                    id:
                      description: Category ID
                      not: {}
                    name:
                      description: Category name
                      type: string
                      minLength: 1
                    sub:
                      description: Test Sub Category
                      type: object
                      properties:
                        prop1:
                          description: Dumb Property
                          type: string
                      required:
                        - prop1
                      additionalProperties: false
                  required:
                    - name
                    - sub
                  additionalProperties: false
                name:
                  description: The name given to a pet
                  type: string
                photoUrls:
                  description: The list of URL to a cute photos featuring pet
                  type: array
                  items:
                    type: string
                    format: url
                friend:
                  type: object
                  properties:
                    id:
                      description: Pet ID
                      not: {}
                    category:
                      description: Categories this pet belongs to
                      type: object
                      properties:
                        id:
                          description: Category ID
                          not: {}
                        name:
                          description: Category name
                          type: string
                          minLength: 1
                        sub:
                          description: Test Sub Category
                          type: object
                          properties:
                            prop1:
                              description: Dumb Property
                              type: string
                          required:
                            - prop1
                          additionalProperties: false
                      required:
                        - name
                        - sub
                      additionalProperties: false
                    name:
                      description: The name given to a pet
                      type: string
                    photoUrls:
                      description: The list of URL to a cute photos featuring pet
                      type: array
                      items:
                        type: string
                        format: url
                    friend:
                      type: object
                      properties:
                        id:
                          description: Pet ID
                          not: {}
                        category:
                          description: Categories this pet belongs to
                          type: object
                          properties:
                            id:
                              description: Category ID
                              not: {}
                            name:
                              description: Category name
                              type: string
                              minLength: 1
                            sub:
                              description: Test Sub Category
                              type: object
                              properties:
                                prop1:
                                  description: Dumb Property
                                  type: string
                              required:
                                - prop1
                              additionalProperties: false
                          required:
                            - name
                            - sub
                          additionalProperties: false
                        name:
                          description: The name given to a pet
                          type: string
                        photoUrls:
                          description: The list of URL to a cute photos featuring pet
                          type: array
                          items:
                            type: string
                            format: url
                        friend: {}
                        tags:
                          description: Tags attached to the pet
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                description: Tag ID
                                not: {}
                              name:
                                description: Tag name
                                type: string
                                minLength: 1
                            required:
                              - name
                            additionalProperties: false
                        status:
                          description: Pet status in the store
                          type: string
                          enum:
                            - available
                            - pending
                            - sold
                        petType:
                          description: Type of a pet
                          type: string
                      required:
                        - category
                        - name
                        - photoUrls
                        - friend
                        - tags
                        - status
                        - petType
                      additionalProperties: false
                      discriminator:
                        propertyName: petType
                        mapping:
                          cat: '#/components/schemas/Cat'
                          dog: '#/components/schemas/Dog'
                          bee: '#/components/schemas/HoneyBee'
                    tags:
                      description: Tags attached to the pet
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            description: Tag ID
                            not: {}
                          name:
                            description: Tag name
                            type: string
                            minLength: 1
                        required:
                          - name
                        additionalProperties: false
                    status:
                      description: Pet status in the store
                      type: string
                      enum:
                        - available
                        - pending
                        - sold
                    petType:
                      description: Type of a pet
                      type: string
                  required:
                    - category
                    - name
                    - photoUrls
                    - friend
                    - tags
                    - status
                    - petType
                  additionalProperties: false
                  discriminator:
                    propertyName: petType
                    mapping:
                      cat: '#/components/schemas/Cat'
                      dog: '#/components/schemas/Dog'
                      bee: '#/components/schemas/HoneyBee'
                tags:
                  description: Tags attached to the pet
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        description: Tag ID
                        not: {}
                      name:
                        description: Tag name
                        type: string
                        minLength: 1
                    required:
                      - name
                    additionalProperties: false
                status:
                  description: Pet status in the store
                  type: string
                  enum:
                    - available
                    - pending
                    - sold
                petType:
                  description: Type of a pet
                  type: string
              required:
                - category
                - name
                - photoUrls
                - friend
                - tags
                - status
                - petType
              additionalProperties: false
              discriminator:
                propertyName: petType
                mapping:
                  cat: '#/components/schemas/Cat'
                  dog: '#/components/schemas/Dog'
                  bee: '#/components/schemas/HoneyBee'
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received successfully
components:
  schemas:
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
    Cat:
      description: A representation of a cat
      allOf:
        - $ref: '#/components/schemas/Pet'
        - type: object
          properties:
            huntingSkill:
              type: string
              description: The measured skill for hunting
              default: lazy
              example: adventurous
              enum:
                - clueless
                - lazy
                - adventurous
                - aggressive
          required:
            - huntingSkill
    Category:
      type: object
      properties:
        id:
          description: Category ID
          allOf:
            - $ref: '#/components/schemas/Id'
        name:
          description: Category name
          type: string
          minLength: 1
        sub:
          description: Test Sub Category
          type: object
          properties:
            prop1:
              type: string
              description: Dumb Property
      xml:
        name: Category
    Dog:
      description: A representation of a dog
      allOf:
        - $ref: '#/components/schemas/Pet'
        - type: object
          properties:
            packSize:
              type: integer
              format: int32
              description: The size of the pack the dog is from
              default: 1
              minimum: 1
          required:
            - packSize
    HoneyBee:
      description: A representation of a honey bee
      allOf:
        - $ref: '#/components/schemas/Pet'
        - type: object
          properties:
            honeyPerDay:
              type: number
              description: Average amount of honey produced per day in ounces
              example: 3.14
              multipleOf: 0.01
          required:
            - honeyPerDay
    Id:
      type: integer
      format: int64
      readOnly: true
    Order:
      type: object
      properties:
        id:
          description: Order ID
          allOf:
            - $ref: '#/components/schemas/Id'
        petId:
          description: Pet ID
          allOf:
            - $ref: '#/components/schemas/Id'
        quantity:
          type: integer
          format: int32
          minimum: 1
          default: 1
        shipDate:
          description: Estimated ship date
          type: string
          format: date-time
        status:
          type: string
          description: Order Status
          enum:
            - placed
            - approved
            - delivered
        complete:
          description: Indicates whenever order was completed or not
          type: boolean
          default: false
          readOnly: true
        requestId:
          description: Unique Request Id
          type: string
          writeOnly: true
      xml:
        name: Order
    Pet:
      type: object
      required:
        - name
        - photoUrls
      discriminator:
        propertyName: petType
        mapping:
          cat: '#/components/schemas/Cat'
          dog: '#/components/schemas/Dog'
          bee: '#/components/schemas/HoneyBee'
      properties:
        id:
          externalDocs:
            description: Find more info here
            url: https://example.com
          description: Pet ID
          allOf:
            - $ref: '#/components/schemas/Id'
        category:
          description: Categories this pet belongs to
          allOf:
            - $ref: '#/components/schemas/Category'
        name:
          description: The name given to a pet
          type: string
          example: Guru
        photoUrls:
          description: The list of URL to a cute photos featuring pet
          type: array
          maxItems: 20
          xml:
            name: photoUrl
            wrapped: true
          items:
            type: string
            format: url
        friend:
          allOf:
            - $ref: '#/components/schemas/Pet'
        tags:
          description: Tags attached to the pet
          type: array
          minItems: 1
          xml:
            name: tag
            wrapped: true
          items:
            $ref: '#/components/schemas/Tag'
        status:
          type: string
          description: Pet status in the store
          enum:
            - available
            - pending
            - sold
        petType:
          description: Type of a pet
          type: string
      xml:
        name: Pet
    Tag:
      type: object
      properties:
        id:
          description: Tag ID
          allOf:
            - $ref: '#/components/schemas/Id'
        name:
          description: Tag name
          type: string
          minLength: 1
      xml:
        name: Tag
    User:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        pet:
          oneOf:
            - $ref: '#/components/schemas/Pet'
            - $ref: '#/components/schemas/Tag'
        username:
          description: User supplied username
          type: string
          minLength: 4
          example: John78
        firstName:
          description: User first name
          type: string
          minLength: 1
          example: John
        lastName:
          description: User last name
          type: string
          minLength: 1
          example: Smith
        email:
          description: User email address
          type: string
          format: email
          example: john.smith@example.com
        password:
          type: string
          description: User password, MUST contain a mix of upper and lower case letters, as well as digits
          format: password
          minLength: 8
          pattern: /(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/
          example: drowssaP123
        phone:
          description: User phone number in international format
          type: string
          pattern: /^\+(?:[0-9]-?){6,14}[0-9]$/
          example: +1-202-555-0192
        userStatus:
          description: User status
          type: integer
          format: int32
      xml:
        name: User
  requestBodies:
    Pet:
      content:
        application/json:
          x-type:
            $and:
              - any
              - $ref: '#/components/x-types/Pet'
          schema:
            type: object
            properties:
              id:
                description: Pet ID
                not: {}
              category:
                description: Categories this pet belongs to
                type: object
                properties:
                  id:
                    description: Category ID
                    not: {}
                  name:
                    description: Category name
                    type: string
                    minLength: 1
                  sub:
                    description: Test Sub Category
                    type: object
                    properties:
                      prop1:
                        description: Dumb Property
                        type: string
                    required:
                      - prop1
                    additionalProperties: false
                required:
                  - name
                  - sub
                additionalProperties: false
              name:
                description: The name given to a pet
                type: string
              photoUrls:
                description: The list of URL to a cute photos featuring pet
                type: array
                items:
                  type: string
                  format: url
              friend:
                type: object
                properties:
                  id:
                    description: Pet ID
                    not: {}
                  category:
                    description: Categories this pet belongs to
                    type: object
                    properties:
                      id:
                        description: Category ID
                        not: {}
                      name:
                        description: Category name
                        type: string
                        minLength: 1
                      sub:
                        description: Test Sub Category
                        type: object
                        properties:
                          prop1:
                            description: Dumb Property
                            type: string
                        required:
                          - prop1
                        additionalProperties: false
                    required:
                      - name
                      - sub
                    additionalProperties: false
                  name:
                    description: The name given to a pet
                    type: string
                  photoUrls:
                    description: The list of URL to a cute photos featuring pet
                    type: array
                    items:
                      type: string
                      format: url
                  friend:
                    type: object
                    properties:
                      id:
                        description: Pet ID
                        not: {}
                      category:
                        description: Categories this pet belongs to
                        type: object
                        properties:
                          id:
                            description: Category ID
                            not: {}
                          name:
                            description: Category name
                            type: string
                            minLength: 1
                          sub:
                            description: Test Sub Category
                            type: object
                            properties:
                              prop1:
                                description: Dumb Property
                                type: string
                            required:
                              - prop1
                            additionalProperties: false
                        required:
                          - name
                          - sub
                        additionalProperties: false
                      name:
                        description: The name given to a pet
                        type: string
                      photoUrls:
                        description: The list of URL to a cute photos featuring pet
                        type: array
                        items:
                          type: string
                          format: url
                      friend: {}
                      tags:
                        description: Tags attached to the pet
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              description: Tag ID
                              not: {}
                            name:
                              description: Tag name
                              type: string
                              minLength: 1
                          required:
                            - name
                          additionalProperties: false
                      status:
                        description: Pet status in the store
                        type: string
                        enum:
                          - available
                          - pending
                          - sold
                      petType:
                        description: Type of a pet
                        type: string
                    required:
                      - category
                      - name
                      - photoUrls
                      - friend
                      - tags
                      - status
                      - petType
                    additionalProperties: false
                    discriminator:
                      propertyName: petType
                      mapping:
                        cat: '#/components/schemas/Cat'
                        dog: '#/components/schemas/Dog'
                        bee: '#/components/schemas/HoneyBee'
                  tags:
                    description: Tags attached to the pet
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          description: Tag ID
                          not: {}
                        name:
                          description: Tag name
                          type: string
                          minLength: 1
                      required:
                        - name
                      additionalProperties: false
                  status:
                    description: Pet status in the store
                    type: string
                    enum:
                      - available
                      - pending
                      - sold
                  petType:
                    description: Type of a pet
                    type: string
                required:
                  - category
                  - name
                  - photoUrls
                  - friend
                  - tags
                  - status
                  - petType
                additionalProperties: false
                discriminator:
                  propertyName: petType
                  mapping:
                    cat: '#/components/schemas/Cat'
                    dog: '#/components/schemas/Dog'
                    bee: '#/components/schemas/HoneyBee'
              tags:
                description: Tags attached to the pet
                type: array
                items:
                  type: object
                  properties:
                    id:
                      description: Tag ID
                      not: {}
                    name:
                      description: Tag name
                      type: string
                      minLength: 1
                  required:
                    - name
                  additionalProperties: false
              status:
                description: Pet status in the store
                type: string
                enum:
                  - available
                  - pending
                  - sold
              petType:
                description: Type of a pet
                type: string
            required:
              - category
              - name
              - photoUrls
              - friend
              - tags
              - status
              - petType
            additionalProperties: false
            discriminator:
              propertyName: petType
              mapping:
                cat: '#/components/schemas/Cat'
                dog: '#/components/schemas/Dog'
                bee: '#/components/schemas/HoneyBee'
        application/xml:
          x-type:
            name: string
            $descriptions:
              name: hooray
          schema:
            type: object
            properties:
              name:
                description: hooray
                type: string
            required:
              - name
            additionalProperties: false
      description: Pet object that needs to be added to the store
      required: true
    UserArray:
      content:
        application/json:
          x-type:
            array:
              id:
                $readonly: number::integer
              pet:
                - $ref: '#/components/x-types/Pet'
                - $ref: '#/components/x-types/Tag'
              username: string::min(4)
              firstName: string::min(1)
              lastName: string::min(1)
              email: string::email
              password: string::password::pattern(/(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/)::min(8)
              phone: string::pattern(/^\+(?:[0-9]-?){6,14}[0-9]$/)
              userStatus: number::integer
              $descriptions:
                username: User supplied username
                firstName: User first name
                lastName: User last name
                email: User email address
                password: User password, MUST contain a mix of upper and lower case letters, as well as digits
                phone: User phone number in international format
                userStatus: User status
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  not: {}
                pet:
                  anyOf:
                    - type: object
                      properties:
                        id:
                          description: Pet ID
                          not: {}
                        category:
                          description: Categories this pet belongs to
                          type: object
                          properties:
                            id:
                              description: Category ID
                              not: {}
                            name:
                              description: Category name
                              type: string
                              minLength: 1
                            sub:
                              description: Test Sub Category
                              type: object
                              properties:
                                prop1:
                                  description: Dumb Property
                                  type: string
                              required:
                                - prop1
                              additionalProperties: false
                          required:
                            - name
                            - sub
                          additionalProperties: false
                        name:
                          description: The name given to a pet
                          type: string
                        photoUrls:
                          description: The list of URL to a cute photos featuring pet
                          type: array
                          items:
                            type: string
                            format: url
                        friend:
                          type: object
                          properties:
                            id:
                              description: Pet ID
                              not: {}
                            category:
                              description: Categories this pet belongs to
                              type: object
                              properties:
                                id:
                                  description: Category ID
                                  not: {}
                                name:
                                  description: Category name
                                  type: string
                                  minLength: 1
                                sub:
                                  description: Test Sub Category
                                  type: object
                                  properties:
                                    prop1:
                                      description: Dumb Property
                                      type: string
                                  required:
                                    - prop1
                                  additionalProperties: false
                              required:
                                - name
                                - sub
                              additionalProperties: false
                            name:
                              description: The name given to a pet
                              type: string
                            photoUrls:
                              description: The list of URL to a cute photos featuring pet
                              type: array
                              items:
                                type: string
                                format: url
                            friend:
                              type: object
                              properties:
                                id:
                                  description: Pet ID
                                  not: {}
                                category:
                                  description: Categories this pet belongs to
                                  type: object
                                  properties:
                                    id:
                                      description: Category ID
                                      not: {}
                                    name:
                                      description: Category name
                                      type: string
                                      minLength: 1
                                    sub:
                                      description: Test Sub Category
                                      type: object
                                      properties:
                                        prop1:
                                          description: Dumb Property
                                          type: string
                                      required:
                                        - prop1
                                      additionalProperties: false
                                  required:
                                    - name
                                    - sub
                                  additionalProperties: false
                                name:
                                  description: The name given to a pet
                                  type: string
                                photoUrls:
                                  description: The list of URL to a cute photos featuring pet
                                  type: array
                                  items:
                                    type: string
                                    format: url
                                friend: {}
                                tags:
                                  description: Tags attached to the pet
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      id:
                                        description: Tag ID
                                        not: {}
                                      name:
                                        description: Tag name
                                        type: string
                                        minLength: 1
                                    required:
                                      - name
                                    additionalProperties: false
                                status:
                                  description: Pet status in the store
                                  type: string
                                  enum:
                                    - available
                                    - pending
                                    - sold
                                petType:
                                  description: Type of a pet
                                  type: string
                              required:
                                - category
                                - name
                                - photoUrls
                                - friend
                                - tags
                                - status
                                - petType
                              additionalProperties: false
                              discriminator:
                                propertyName: petType
                                mapping:
                                  cat: '#/components/schemas/Cat'
                                  dog: '#/components/schemas/Dog'
                                  bee: '#/components/schemas/HoneyBee'
                            tags:
                              description: Tags attached to the pet
                              type: array
                              items:
                                type: object
                                properties:
                                  id:
                                    description: Tag ID
                                    not: {}
                                  name:
                                    description: Tag name
                                    type: string
                                    minLength: 1
                                required:
                                  - name
                                additionalProperties: false
                            status:
                              description: Pet status in the store
                              type: string
                              enum:
                                - available
                                - pending
                                - sold
                            petType:
                              description: Type of a pet
                              type: string
                          required:
                            - category
                            - name
                            - photoUrls
                            - friend
                            - tags
                            - status
                            - petType
                          additionalProperties: false
                          discriminator:
                            propertyName: petType
                            mapping:
                              cat: '#/components/schemas/Cat'
                              dog: '#/components/schemas/Dog'
                              bee: '#/components/schemas/HoneyBee'
                        tags:
                          description: Tags attached to the pet
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                description: Tag ID
                                not: {}
                              name:
                                description: Tag name
                                type: string
                                minLength: 1
                            required:
                              - name
                            additionalProperties: false
                        status:
                          description: Pet status in the store
                          type: string
                          enum:
                            - available
                            - pending
                            - sold
                        petType:
                          description: Type of a pet
                          type: string
                      required:
                        - category
                        - name
                        - photoUrls
                        - friend
                        - tags
                        - status
                        - petType
                      additionalProperties: false
                      discriminator:
                        propertyName: petType
                        mapping:
                          cat: '#/components/schemas/Cat'
                          dog: '#/components/schemas/Dog'
                          bee: '#/components/schemas/HoneyBee'
                    - type: object
                      properties:
                        id:
                          description: Tag ID
                          not: {}
                        name:
                          description: Tag name
                          type: string
                          minLength: 1
                      required:
                        - name
                      additionalProperties: false
                username:
                  description: User supplied username
                  type: string
                  minLength: 4
                firstName:
                  description: User first name
                  type: string
                  minLength: 1
                lastName:
                  description: User last name
                  type: string
                  minLength: 1
                email:
                  description: User email address
                  type: string
                  format: email
                password:
                  description: User password, MUST contain a mix of upper and lower case letters, as well as digits
                  type: string
                  format: password
                  pattern: /(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/
                  minLength: 8
                phone:
                  description: User phone number in international format
                  type: string
                  pattern: /^\+(?:[0-9]-?){6,14}[0-9]$/
                userStatus:
                  description: User status
                  type: integer
              required:
                - pet
                - username
                - firstName
                - lastName
                - email
                - password
                - phone
                - userStatus
              additionalProperties: false
      description: List of user object
      required: true
  securitySchemes:
    petstore_auth:
      description: |
        Get access to data while protecting your account credentials.
        OAuth2 is also a safer and more secure way to give you access.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: http://petstore.swagger.io/api/oauth/dialog
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      description: |
        For this sample, you can use the api key `special-key` to test the authorization filters.
      type: apiKey
      name: api_key
      in: header
  examples:
    Order:
      value:
        quantity: 1
        shipDate: '2018-10-19T16:46:45Z'
        status: placed
        complete: false
  x-types:
    ApiResponse:
      code: number::integer
      type: string
      message: string
    Cat:
      $and:
        - $ref: '#/components/x-types/Pet'
        - huntingSkill:
            - clueless
            - lazy
            - adventurous
            - aggressive
          $descriptions:
            huntingSkill: The measured skill for hunting
    Category:
      id:
        $and:
          - $ref: '#/components/x-types/Id'
      name: string::min(1)
      sub:
        prop1: string
        $descriptions:
          prop1: Dumb Property
      $descriptions:
        id: Category ID
        name: Category name
        sub: Test Sub Category
    Dog:
      $and:
        - $ref: '#/components/x-types/Pet'
        - packSize: number::integer::min(1)
          $descriptions:
            packSize: The size of the pack the dog is from
    HoneyBee:
      $and:
        - $ref: '#/components/x-types/Pet'
        - honeyPerDay: number
          $descriptions:
            honeyPerDay: Average amount of honey produced per day in ounces
    Id:
      $readonly: number::integer
    Order:
      id:
        $and:
          - $ref: '#/components/x-types/Id'
      petId:
        $and:
          - $ref: '#/components/x-types/Id'
      quantity: number::integer::min(1)
      shipDate: string::date-time
      status:
        - placed
        - approved
        - delivered
      complete:
        $readonly: boolean
      requestId:
        $writeonly: string
      $descriptions:
        id: Order ID
        petId: Pet ID
        shipDate: Estimated ship date
        status: Order Status
        complete: Indicates whenever order was completed or not
        requestId: Unique Request Id
    Pet:
      id:
        $and:
          - $ref: '#/components/x-types/Id'
      category:
        $and:
          - $ref: '#/components/x-types/Category'
      name: string
      photoUrls:
        array: string::url
      friend:
        $and:
          - $ref: '#/components/x-types/Pet'
      tags:
        array:
          id:
            $and:
              - $ref: '#/components/x-types/Id'
          name: string::min(1)
          $descriptions:
            id: Tag ID
            name: Tag name
      status:
        - available
        - pending
        - sold
      petType: string
      $discriminator:
        propertyName: petType
        mapping:
          cat: '#/components/schemas/Cat'
          dog: '#/components/schemas/Dog'
          bee: '#/components/schemas/HoneyBee'
      $descriptions:
        id: Pet ID
        category: Categories this pet belongs to
        name: The name given to a pet
        photoUrls: The list of URL to a cute photos featuring pet
        tags: Tags attached to the pet
        status: Pet status in the store
        petType: Type of a pet
    Tag:
      id:
        $and:
          - $ref: '#/components/x-types/Id'
      name: string::min(1)
      $descriptions:
        id: Tag ID
        name: Tag name
    User:
      id:
        $readonly: number::integer
      pet:
        - $ref: '#/components/x-types/Pet'
        - $ref: '#/components/x-types/Tag'
      username: string::min(4)
      firstName: string::min(1)
      lastName: string::min(1)
      email: string::email
      password: string::password::pattern(/(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/)::min(8)
      phone: string::pattern(/^\+(?:[0-9]-?){6,14}[0-9]$/)
      userStatus: number::integer
      $descriptions:
        username: User supplied username
        firstName: User first name
        lastName: User last name
        email: User email address
        password: User password, MUST contain a mix of upper and lower case letters, as well as digits
        phone: User phone number in international format
        userStatus: User status
x-tagGroups:
  - name: General
    tags:
      - pet
      - store
  - name: User Management
    tags:
      - user
  - name: Models
    tags:
      - pet_model
      - store_model
